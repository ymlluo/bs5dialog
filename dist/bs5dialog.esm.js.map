{"version":3,"file":"bs5dialog.esm.js","sources":["../src/utils.js","../src/i18n.js","../src/utils/bootstrapInit.js","../src/resource/icons.js","../src/components/message.js","../src/components/load.js","../src/components/offcanvas.js","../src/components/alert.js","../src/components/confirm.js","../src/components/prompt.js","../src/components/toast.js","../src/resource/loading.js","../src/components/loading.js","../src/startup.js","../src/bs5dialog.js"],"sourcesContent":["/**\r\n * Determines whether the given text is a URL or a path.\r\n * @param {string} text - The text to check.\r\n * @returns {boolean} - True if the text is a URL or a path, false otherwise.\r\n */\r\nexport function isUrlOrPath(text) {\r\n  const regex = /^(http|https|ftp|ftps|file|data|mailto|tel|sms|urn):\\/\\/[\\S]+|^\\/[\\S]+|^\\.\\/[\\S]+/;\r\n  return regex.test(text);\r\n}\r\n\r\n/**\r\n * Returns the target element\r\n * @param {Element|string} element - The element or the selector string\r\n * @returns {Element|null} - The target element or null\r\n */\r\nexport function getTargetElement(element) {\r\n  if (element instanceof Element) {\r\n    return element;\r\n  }\r\n  return typeof element === \"string\" ? document.querySelector(element) : null;\r\n}\r\n\r\n/**\r\n * Makes the given element resizable.\r\n * @param {HTMLElement} el - The element to make resizable.\r\n */\r\nexport function makeResizable(el) {\r\n  const element = getTargetElement(el);\r\n  if (element) {\r\n    element.style.position = \"absolute\";\r\n    element.style.resize = \"both\";\r\n    element.style.overflow = \"auto\";\r\n  }\r\n}\r\n/**\r\n * Makes an element draggable\r\n * @param {HTMLElement} elmnt - The element to be made draggable\r\n * @param {HTMLElement} handler - The element to be used as the handler for dragging\r\n */\r\nexport function makeDraggable(elmnt, handler) {\r\n  elmnt = getTargetElement(elmnt);\r\n  handler = getTargetElement(handler);\r\n  handler.style.cursor = \"move\";\r\n  // Make an element draggable (or if it has a .window-top class, drag based on the .window-top element)\r\n  let currentPosX = 0,\r\n    currentPosY = 0,\r\n    previousPosX = 0,\r\n    previousPosY = 0,\r\n    prevLeft = 0,\r\n    prevTop = 0;\r\n\r\n  // If there is a window-top classed element, attach to that element instead of full window\r\n  if (handler) {\r\n    // If present, the window-top element is where you move the parent element from\r\n    handler.onmousedown = dragMouseDown;\r\n  } else {\r\n    // Otherwise, move the element itself\r\n    elmnt.onmousedown = dragMouseDown;\r\n  }\r\n\r\n  /**\r\n   * Function called when the mouse is pressed down on the draggable element\r\n   * @param {MouseEvent} e - The mouse event\r\n   */\r\n  function dragMouseDown(e) {\r\n    // Prevent any default action on this element (you can remove if you need this element to perform its default action)\r\n    e.preventDefault();\r\n    // Get the mouse cursor position and set the initial previous positions to begin\r\n    previousPosX = e.clientX;\r\n    previousPosY = e.clientY;\r\n    // When the mouse is let go, call the closing event\r\n    document.onmouseup = closeDragElement;\r\n    // call a function whenever the cursor moves\r\n    document.onmousemove = elementDrag;\r\n  }\r\n\r\n  /**\r\n   * Function called when the draggable element is being dragged\r\n   * @param {MouseEvent} e - The mouse event\r\n   */\r\n  function elementDrag(e) {\r\n    // Prevent any default action on this element (you can remove if you need this element to perform its default action)\r\n    e.preventDefault();\r\n    // Calculate the new cursor position by using the previous x and y positions of the mouse\r\n    currentPosX = previousPosX - e.clientX;\r\n    currentPosY = previousPosY - e.clientY;\r\n    // Replace the previous positions with the new x and y positions of the mouse\r\n    previousPosX = e.clientX;\r\n    previousPosY = e.clientY;\r\n    // Set the element's new position\r\n    elmnt.style.top = elmnt.offsetTop - currentPosY + \"px\";\r\n    elmnt.style.left = elmnt.offsetLeft - currentPosX + \"px\";\r\n    // console.error(currentPosX, currentPosY, previousPosX, previousPosY);\r\n  }\r\n\r\n  /**\r\n   * Function called when the mouse button is released, stopping the dragging of the element\r\n   * @param {MouseEvent} e - The mouse event\r\n   */\r\n  function closeDragElement() {\r\n    // Stop moving when mouse button is released and release events\r\n    document.onmouseup = null;\r\n    document.onmousemove = null;\r\n    let handlerInfo = handler.getBoundingClientRect();\r\n    let elmntRect = elmnt.getBoundingClientRect();\r\n\r\n    if (handlerInfo.top + handler.offsetHeight < 0 || handlerInfo.top > window.innerHeight) {\r\n      elmnt.style.top = prevTop + \"px\";\r\n    } else {\r\n      prevTop = elmntRect.top;\r\n    }\r\n    if (handlerInfo.left + handler.offsetWidth + 60 < 0 || handlerInfo.right - handler.offsetWidth > window.innerWidth) {\r\n      elmnt.style.left = prevLeft + \"px\";\r\n    } else {\r\n      prevLeft = elmntRect.left;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Calculates the dimensions of the overlap between two divs.\r\n * @param {HTMLElement} div1 - The first div element.\r\n * @param {HTMLElement} div2 - The second div element.\r\n * @returns {Object} An object containing the width and height of the overlap.\r\n */\r\nexport function getOverlapDimensions(div1, div2) {\r\n  const rect1 = div1.getBoundingClientRect();\r\n  const rect2 = div2.getBoundingClientRect();\r\n\r\n  const overlapLeft = Math.max(rect1.left, rect2.left);\r\n  const overlapTop = Math.max(rect1.top, rect2.top);\r\n  const overlapRight = Math.min(rect1.right, rect2.right);\r\n  const overlapBottom = Math.min(rect1.bottom, rect2.bottom);\r\n\r\n  const overlapWidth = overlapRight - overlapLeft;\r\n  const overlapHeight = overlapBottom - overlapTop;\r\n\r\n  return { overlapWidth, overlapHeight };\r\n}\r\n\r\n/**\r\n * Generates a unique dialog ID.\r\n * @returns {string} The generated dialog ID.\r\n */\r\nexport function genDialogId() {\r\n  const modalId = \"dialg-\" + Math.floor(Math.random() * 1000000);\r\n  return modalId;\r\n}\r\n\r\n/**\r\n * Creates a modal wrapper element with specific classes and attributes.\r\n * @returns {HTMLElement} The modal wrapper element.\r\n */\r\nexport function setModalWrapper() {\r\n  let modal = document.createElement(\"div\");\r\n  modal.classList.add(\"modal\", \"bs5dialog-modal\");\r\n  modal.setAttribute(\"data-bs-backdrop\", \"static\");\r\n  modal.setAttribute(\"tabindex\", \"-1\");\r\n  return modal;\r\n}\r\n\r\n/**\r\n * Locks the target element and sets a timeout to unlock it\r\n * @param {Element|string} element - The element or the selector string\r\n * @param {number} [timeout=1000] - The timeout in milliseconds\r\n * @returns {number} - The timeout ID\r\n */\r\nexport function replayLock(element, timeout = 1000) {\r\n  const targetElement = getTargetElement(element);\r\n  targetElement.disabled = true;\r\n  targetElement.classList.add(\"disabled\");\r\n  targetElement.timeoutId = setTimeout(() => {\r\n    cancelReplayLock(targetElement);\r\n  }, timeout);\r\n  return targetElement.timeoutId;\r\n}\r\n\r\n/**\r\n * Cancels the replay lock and unlocks the target element\r\n * @param {Element|string} element - The element or the selector string\r\n */\r\nexport function cancelReplayLock(element) {\r\n  const targetElement = getTargetElement(element);\r\n  targetElement.disabled = false;\r\n  targetElement.classList.remove(\"disabled\");\r\n  clearTimeout(targetElement.timeoutId);\r\n}\r\n\r\n/**\r\n * Returns the maximum z-index value of all elements in the document.\r\n * @returns {number} The maximum z-index value.\r\n */\r\nexport function getMaxZIndex() {\r\n  const maxZIndex = Math.max(\r\n    ...[...document.querySelectorAll(\"*\")].map(element => parseFloat(getComputedStyle(element).zIndex)).filter(zIndex => !isNaN(zIndex))\r\n  );\r\n  return maxZIndex;\r\n}\r\n/**\r\n * Returns the appropriate text color class based on the perceived brightness of a background color.\r\n * @param {string} bgColorClassName - The class name of the background color element.\r\n * @returns {string} - The class name of the appropriate text color.\r\n */\r\nexport function getTextClass(bgColorClassName) {\r\n  switch (bgColorClassName) {\r\n    case \"bg-primary\":\r\n    case \"bg-secondary\":\r\n    case \"bg-success\":\r\n    case \"bg-danger\":\r\n    case \"bg-warning\":\r\n    case \"bg-info\":\r\n    case \"bg-dark\":\r\n      return \"text-white\";\r\n    case \"bg-light\":\r\n    case \"bg-link\":\r\n    default:\r\n      return \"text-dark\";\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Makes a request to the specified URL using the specified method and options.\r\n * @param {string} url - The URL to make the request to.\r\n * @param {string} [method=\"GET\"] - The HTTP method to use for the request.\r\n * @param {Object} [headers={}] - The headers to include in the request.\r\n * @param {Object|FormData|null} [body=null] - The body of the request.\r\n * @param {Object} [options={}] - Additional options to include in the request.\r\n * @returns {Promise<Object>} - A Promise that resolves with an object containing the response data.\r\n */\r\nexport async function makeRequest(url, method = \"GET\", headers = {}, body = null, options = {}) {\r\n  const csrfTokenMeta = document.querySelector('meta[name=\"csrf-token\"]');\r\n  if (csrfTokenMeta) {\r\n    headers[\"X-CSRF-TOKEN\"] = csrfTokenMeta.content;\r\n  }\r\n  options = {\r\n    method,\r\n    headers: {\r\n      ...headers\r\n    },\r\n    ...options\r\n  };\r\n\r\n  if (body) {\r\n    if (body instanceof FormData) {\r\n      // If body is a FormData object, do not set Content-Type header and pass the FormData directly to fetch\r\n      options.body = body;\r\n    } else {\r\n      // If body is not a FormData object, assume it's JSON data\r\n      options.body = JSON.stringify(body);\r\n      options.headers[\"Content-Type\"] = \"application/json\";\r\n    }\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(url, options);\r\n\r\n    const contentType = response.headers.get(\"content-type\");\r\n    const isSuccess = response.ok;\r\n    const statusCode = response.status;\r\n    let content;\r\n    let contentTypeValue;\r\n    if (contentType && contentType.indexOf(\"text/html\") !== -1) {\r\n      content = await response.text();\r\n      console.log(response.url)\r\n      contentTypeValue = 'html';\r\n    } else {\r\n      content = await response.json();\r\n      contentTypeValue = 'json';\r\n    }\r\n    return {\r\n      isSuccess,\r\n      statusCode,\r\n      content,\r\n      contentType: contentTypeValue\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      isSuccess: false,\r\n      statusCode: error.status,\r\n      content: error.message\r\n    };\r\n  }\r\n}\r\n\r\n\r\n\r\n/**\r\n * Creates and triggers a custom event with the given name and detail on the given element\r\n * @param {HTMLElement} element - The element on which to trigger the event\r\n * @param {string} eventName - The name of the event to trigger\r\n * @param {object} detail - The detail object to be attached to the event\r\n */\r\nexport function triggerEvent(element, eventName = \"\", detail = {}) {\r\n  if (!eventName || !element) {\r\n    return;\r\n  }\r\n  const newEvent = new CustomEvent(eventName, {\r\n    bubbles: true,\r\n    cancelable: true,\r\n    detail: detail\r\n  });\r\n  if (event && event.target && event.target instanceof Element) {\r\n    event.target.dispatchEvent(newEvent);\r\n  }\r\n  // console.log(eventName, element, detail);\r\n  element.dispatchEvent(newEvent);\r\n}\r\n\r\n/**\r\n * Debounces a function call\r\n * @param {Function} func - The function to debounce\r\n * @param {number} delay - The delay in milliseconds\r\n * @returns {Function} - The debounced function\r\n */\r\nexport function debounce(func, delay) {\r\n  let timeoutId;\r\n  return (...args) => {\r\n    clearTimeout(timeoutId);\r\n    timeoutId = setTimeout(() => {\r\n      func(...args);\r\n    }, delay);\r\n  };\r\n}\r\n\r\n/**\r\n * Throttles a function call\r\n * @param {Function} func - The function to throttle\r\n * @param {number} limit - The limit in milliseconds\r\n * @returns {Function} - The throttled function\r\n */\r\nexport function throttle(func, limit) {\r\n  let lastFunc;\r\n  let lastRan;\r\n  return (...args) => {\r\n    if (!lastRan) {\r\n      func(...args);\r\n      lastRan = Date.now();\r\n    } else {\r\n      clearTimeout(lastFunc);\r\n      lastFunc = setTimeout(() => {\r\n        if (Date.now() - lastRan >= limit) {\r\n          func(...args);\r\n          lastRan = Date.now();\r\n        }\r\n      }, limit - (Date.now() - lastRan));\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Observes changes to a target element and triggers callbacks accordingly.\r\n * @param {HTMLElement} targetElement - The element to observe.\r\n * @param {object} options - The options object.\r\n * @param {Function} options.created - Callback to be executed when a new child node is added.\r\n * @param {Function} options.remove - Callback to be executed when a child node is removed.\r\n * @param {Function} options.rendered - Callback to be executed when the target element is first rendered.\r\n * @param {Function} options.hidden - Callback to be executed when the target element is hidden.\r\n * @param {Function} options.dragged - Callback to be executed when the target element is dragged.\r\n * @param {Function} options.resize - Callback to be executed when the target element is resized.\r\n * @returns {Promise} - A Promise that resolves when the observer is disconnected.\r\n */\r\nexport function observeElement(targetElement, options) {\r\n  let resizeObserver;\r\n  let hasRendered = false;\r\n  let hasHidden = false;\r\n  const position = { x: targetElement.offsetLeft, y: targetElement.offsetTop };\r\n  let size = { width: 0, height: 0 };\r\n  let targetElementStyle;\r\n  let resizeElement;\r\n  options.created?.(targetElement);\r\n  let waitForInsertionTimeId;\r\n  const waitForInsertion = () => {\r\n    if (!targetElement.parentNode) {\r\n      waitForInsertionTimeId = setTimeout(waitForInsertion, 100);\r\n    } else {\r\n      if (waitForInsertionTimeId) {\r\n        clearTimeout(waitForInsertionTimeId);\r\n      }\r\n      options.rendered?.();\r\n      hasRendered = true;\r\n      resizeElement = targetElement.querySelector(\"div[style*='resize: both']\");\r\n      if (resizeElement) {\r\n        size.width = resizeElement.offsetWidth;\r\n        size.height = resizeElement.offsetHeight;\r\n      }\r\n\r\n      observer.observe(targetElement.parentNode, {\r\n        childList: true,\r\n        attributes: true,\r\n        attributeFilter: [\"style\", \"class\"],\r\n        subtree: true\r\n      });\r\n      positionObserver.observe(targetElement, {\r\n        attributes: true,\r\n        attributeFilter: [\"style\"],\r\n        subtree: true\r\n      });\r\n    }\r\n  };\r\n\r\n  const observer = new MutationObserver(\r\n    debounce(mutationsList => {\r\n      for (const mutation of mutationsList) {\r\n        const { type, target } = mutation;\r\n        switch (type) {\r\n          case \"attributes\":\r\n            if (target !== targetElement) continue;\r\n            targetElementStyle = window.getComputedStyle(target);\r\n            if (hasRendered) {\r\n              // Find the child element with 'resize' style\r\n              if (resizeElement) {\r\n                resizeObserver = new ResizeObserver(\r\n                  throttle(() => {\r\n                    if (resizeElement.offsetWidth != size.width || resizeElement.offsetHeight != size.height) {\r\n                      size.width = resizeElement.offsetWidth;\r\n                      size.height = resizeElement.offsetHeight;\r\n                      options.resize?.();\r\n                    }\r\n                  }, 200)\r\n                );\r\n                resizeObserver.observe(resizeElement);\r\n              }\r\n              if (\r\n                (hasHidden == false && targetElementStyle.display === \"none\") ||\r\n                targetElementStyle.opacity === 0 ||\r\n                targetElementStyle.visibility === \"hidden\"\r\n              ) {\r\n                hasHidden = true;\r\n                hasRendered = false;\r\n                options.hidden?.();\r\n              } else {\r\n                hasHidden = false;\r\n                if (!hasRendered) {\r\n                  options.rendered?.();\r\n                }\r\n              }\r\n            }\r\n            break;\r\n          case \"childList\":\r\n            mutation.removedNodes.forEach(function (removedNode) {\r\n              if (removedNode === targetElement) {\r\n                options.remove?.();\r\n                observer.disconnect();\r\n              }\r\n            });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }, 0)\r\n  );\r\n\r\n  const positionObserver = new MutationObserver(\r\n    throttle(() => {\r\n      const newPos = {\r\n        x: targetElement.offsetLeft,\r\n        y: targetElement.offsetTop\r\n      };\r\n      if (newPos.x !== position.x || newPos.y !== position.y) {\r\n        options.dragged?.(newPos);\r\n        position.x = newPos.x;\r\n        position.y = newPos.y;\r\n      }\r\n    }, 200)\r\n  );\r\n\r\n  waitForInsertion();\r\n\r\n  return Promise.resolve().finally(() => {\r\n    if (resizeObserver) {\r\n      resizeObserver.disconnect();\r\n    }\r\n  });\r\n}\r\n\r\nexport default {\r\n  getTargetElement,\r\n  isUrlOrPath,\r\n  makeDraggable,\r\n  makeResizable,\r\n  makeRequest,\r\n  getOverlapDimensions,\r\n  genDialogId,\r\n  setModalWrapper,\r\n  replayLock,\r\n  cancelReplayLock,\r\n  getMaxZIndex,\r\n  getTextClass,\r\n  triggerEvent,\r\n  debounce,\r\n  throttle,\r\n  observeElement\r\n};\r\n","// Default language is English\r\nexport let bs5LangCurrentLang = \"en\";\r\n// Language configurations\r\n// Language configurations sorted by number of speakers in descending order\r\nexport const bs5LangConfigs = {\r\n  en: {\r\n    ok: \"OK\",\r\n    confirm: \"Confirm\",\r\n    cancel: \"Cancel\",\r\n    save: \"Save\",\r\n    close: \"Close\",\r\n    prompt: \"Prompt\",\r\n    sure: \"Are you sure?\"\r\n  },\r\n  zh: {\r\n    ok: \"确定\",\r\n    confirm: \"确认\",\r\n    cancel: \"取消\",\r\n    save: \"保存\",\r\n    close: \"关闭\",\r\n    prompt: \"提示\",\r\n    sure: \"确定吗？\"\r\n  },\r\n  es: {\r\n    ok: \"Aceptar\",\r\n    confirm: \"Confirmar\",\r\n    cancel: \"Cancelar\",\r\n    save: \"Guardar\",\r\n    close: \"Cerrar\",\r\n    prompt: \"Indicación\",\r\n    sure: \"¿Estás seguro?\"\r\n  },\r\n  pt: {\r\n    ok: \"OK\",\r\n    confirm: \"Confirmar\",\r\n    cancel: \"Cancelar\",\r\n    save: \"Salvar\",\r\n    close: \"Fechar\",\r\n    prompt: \"Prompt\",\r\n    sure: \"Tem certeza?\"\r\n  },\r\n  ru: {\r\n    ok: \"OK\",\r\n    confirm: \"Подтвердить\",\r\n    cancel: \"Отмена\",\r\n    save: \"Сохранить\",\r\n    close: \"Закрыть\",\r\n    prompt: \"Подсказка\",\r\n    sure: \"Вы уверены?\"\r\n  },\r\n  ja: {\r\n    ok: \"もちろん\",\r\n    confirm: \"確認\",\r\n    cancel: \"キャンセル\",\r\n    save: \"保存\",\r\n    close: \"閉じる\",\r\n    prompt: \"促す\",\r\n    sure: \"もちろん\"\r\n  },\r\n  de: {\r\n    ok: \"OK\",\r\n    confirm: \"Bestätigen\",\r\n    cancel: \"Abbrechen\",\r\n    save: \"Speichern\",\r\n    close: \"Schließen\",\r\n    prompt: \"Aufforderung\",\r\n    sure: \"Bist du sicher?\"\r\n  },\r\n  fr: {\r\n    ok: \"D'accord\",\r\n    confirm: \"Confirmer\",\r\n    cancel: \"Annuler\",\r\n    save: \"Enregistrer\",\r\n    close: \"Fermer\",\r\n    prompt: \"Invite\",\r\n    sure: \"Êtes-vous sûr?\"\r\n  },\r\n  ko: {\r\n    ok: \"확인\",\r\n    confirm: \"확인\",\r\n    cancel: \"취소\",\r\n    save: \"저장\",\r\n    close: \"닫기\",\r\n    prompt: \"프롬프트\",\r\n    sure: \"확실합니까?\"\r\n  }\r\n};\r\n\r\n// Get current language\r\nexport const getCurrentLang = () => bs5LangCurrentLang;\r\n\r\n// Set current language\r\nexport const setCurrentLang = lang => {\r\n  if (bs5LangConfigs[lang] || bs5LangConfigs[lang.replace(/-.*$/, \"\")]) {\r\n    bs5LangCurrentLang = lang;\r\n  }\r\n};\r\n\r\n// Get language string for specified key\r\nexport const getConfig = key => bs5LangConfigs[bs5LangCurrentLang][key] || \"\";\r\n\r\n// Get all language configurations\r\nexport const getConfigs = () => bs5LangConfigs;\r\n\r\n// Add a function to set language based on system language\r\nexport const setSystemLang = () => {\r\n  const systemLang = navigator.language || navigator.userLanguage;\r\n  const lang = systemLang.replace(/-.*$/, \"\");\r\n  if (bs5LangConfigs[systemLang]) {\r\n    bs5LangCurrentLang = systemLang;\r\n  } else if (bs5LangConfigs[lang]) {\r\n    bs5LangCurrentLang = lang;\r\n  }\r\n\r\n  console.log(bs5LangCurrentLang, navigator.language, navigator.userLanguage);\r\n};\r\n\r\n// Export default module\r\nexport default {\r\n  getCurrentLang,\r\n  setCurrentLang,\r\n  getConfig,\r\n  getConfigs,\r\n  setSystemLang\r\n};\r\n","/**\r\n * Check if the global bootstrap object is available, shows error message if not available\r\n * @returns {boolean} - Whether bootstrap is available\r\n */\r\nexport function checkBootstrapAvailability() {\r\n    if (typeof bootstrap === 'undefined') {\r\n        console.error('Bootstrap global object is not available. Please make sure Bootstrap 5 is properly loaded before using bs5dialog.');\r\n        return false;\r\n    }\r\n\r\n    // Check if required components are available\r\n    const requiredComponents = ['Modal', 'Dropdown', 'Tooltip', 'Popover', 'Collapse'];\r\n    const missingComponents = requiredComponents.filter(component => !bootstrap[component]);\r\n\r\n    if (missingComponents.length > 0) {\r\n        console.error(`Missing required Bootstrap components: ${missingComponents.join(', ')}. Please ensure the complete Bootstrap 5 library is loaded.`);\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n * Initializes Bootstrap 5.3 components within a given element.\r\n * @param {HTMLElement} element - The element to search for Bootstrap components.\r\n */\r\nexport function initializeBootstrapComponents(element) {\r\n    // Check if bootstrap is available\r\n    if (!checkBootstrapAvailability()) {\r\n        return;\r\n    }\r\n\r\n    // Initialize Dropdowns\r\n    const dropdowns = element.querySelectorAll('[data-bs-toggle=\"dropdown\"]');\r\n    dropdowns.forEach(dropdown => {\r\n        if (!bootstrap.Dropdown.getInstance(dropdown)) {\r\n            new bootstrap.Dropdown(dropdown);\r\n        }\r\n    });\r\n\r\n    // Initialize Tooltips\r\n    const tooltips = element.querySelectorAll('[data-bs-toggle=\"tooltip\"]');\r\n    tooltips.forEach(tooltip => {\r\n        if (!bootstrap.Tooltip.getInstance(tooltip)) {\r\n            new bootstrap.Tooltip(tooltip);\r\n        }\r\n    });\r\n\r\n    // Initialize Popovers\r\n    const popovers = element.querySelectorAll('[data-bs-toggle=\"popover\"]');\r\n    popovers.forEach(popover => {\r\n        if (!bootstrap.Popover.getInstance(popover)) {\r\n            new bootstrap.Popover(popover);\r\n        }\r\n    });\r\n\r\n    // Initialize Collapses\r\n    const collapses = element.querySelectorAll('[data-bs-toggle=\"collapse\"]');\r\n    collapses.forEach(collapse => {\r\n        if (!bootstrap.Collapse.getInstance(collapse)) {\r\n            new bootstrap.Collapse(collapse, {\r\n                toggle: false\r\n            });\r\n        }\r\n    });\r\n\r\n    // Initialize Alerts\r\n    const alerts = element.querySelectorAll('.alert');\r\n    alerts.forEach(alert => {\r\n        if (!bootstrap.Alert.getInstance(alert)) {\r\n            new bootstrap.Alert(alert);\r\n        }\r\n    });\r\n\r\n    // Initialize Toasts\r\n    const toasts = element.querySelectorAll('.toast');\r\n    toasts.forEach(toast => {\r\n        if (!bootstrap.Toast.getInstance(toast)) {\r\n            new bootstrap.Toast(toast);\r\n        }\r\n    });\r\n\r\n    // Initialize Carousels\r\n    const carousels = element.querySelectorAll('.carousel');\r\n    carousels.forEach(carousel => {\r\n        if (!bootstrap.Carousel.getInstance(carousel)) {\r\n            new bootstrap.Carousel(carousel);\r\n        }\r\n    });\r\n\r\n    // Initialize Offcanvas\r\n    const offcanvases = element.querySelectorAll('.offcanvas');\r\n    offcanvases.forEach(offcanvas => {\r\n        if (!bootstrap.Offcanvas.getInstance(offcanvas)) {\r\n            new bootstrap.Offcanvas(offcanvas);\r\n        }\r\n    });\r\n\r\n    // Initialize ScrollSpy\r\n    const scrollspies = element.querySelectorAll('[data-bs-spy=\"scroll\"]');\r\n    scrollspies.forEach(scrollspy => {\r\n        if (!bootstrap.ScrollSpy.getInstance(scrollspy)) {\r\n            new bootstrap.ScrollSpy(document.body, {\r\n                target: scrollspy\r\n            });\r\n        }\r\n    });\r\n\r\n    // Initialize Tabs\r\n    const tabs = element.querySelectorAll('[data-bs-toggle=\"tab\"]');\r\n    tabs.forEach(tab => {\r\n        if (!bootstrap.Tab.getInstance(tab)) {\r\n            new bootstrap.Tab(tab);\r\n        }\r\n    });\r\n\r\n    // Initialize Modals\r\n    const modals = element.querySelectorAll('.modal');\r\n    modals.forEach(modal => {\r\n        if (!bootstrap.Modal.getInstance(modal)) {\r\n            new bootstrap.Modal(modal);\r\n        }\r\n    });\r\n\r\n    // Initialize Buttons\r\n    const buttons = element.querySelectorAll('[data-bs-toggle=\"button\"]');\r\n    buttons.forEach(button => {\r\n        if (!bootstrap.Button.getInstance(button)) {\r\n            new bootstrap.Button(button);\r\n        }\r\n    });\r\n}","/**\r\n * The default icons for the BS5 dialog.\r\n * @type {Object.<string, string>}\r\n */\r\nexport const BS5_DIALOG_DEFAULT_ICONS = {\r\n  \"bs5-check\": `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"1\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n  <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n  <path d=\"M5 12l5 5l10 -10\"></path>\r\n</svg>`,\r\n  \"bs5-circle-check\": `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"1\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n<path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n<path d=\"M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0\"></path>\r\n<path d=\"M9 12l2 2l4 -4\"></path>\r\n</svg>`,\r\n  \"bs5-circle-check-filled\": `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-circle-check-filled\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"0.5\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n<path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n<path d=\"M17 3.34a10 10 0 1 1 -14.995 8.984l-.005 -.324l.005 -.324a10 10 0 0 1 14.995 -8.336zm-1.293 5.953a1 1 0 0 0 -1.32 -.083l-.094 .083l-3.293 3.292l-1.293 -1.292l-.094 -.083a1 1 0 0 0 -1.403 1.403l.083 .094l2 2l.094 .083a1 1 0 0 0 1.226 0l.094 -.083l4 -4l.083 -.094a1 1 0 0 0 -.083 -1.32z\" stroke-width=\"0\" fill=\"currentColor\"></path>\r\n</svg>`,\r\n  \"bs5-square\": `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"\" width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" stroke-width=\"1\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n<path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n<path d=\"M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z\"></path>\r\n</svg>`,\r\n  \"bs5-minimize\": `<svg xmlns=\"http://www.w3.org/2000/svg\" onMouseOver=\"this.style.color='#000'\" onMouseOut=\"this.style.color='#7f7f7f'\"  width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"1.8\"  stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n  <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n  <path d=\"M15 19v-2a2 2 0 0 1 2 -2h2\"></path>\r\n  <path d=\"M15 5v2a2 2 0 0 0 2 2h2\"></path>\r\n  <path d=\"M5 15h2a2 2 0 0 1 2 2v2\"></path>\r\n  <path d=\"M5 9h2a2 2 0 0 0 2 -2v-2\"></path>\r\n</svg>`,\r\n  \"bs5-maximize\": `<svg xmlns=\"http://www.w3.org/2000/svg\" onMouseOver=\"this.style.color='#000'\" onMouseOut=\"this.style.color='#7f7f7f'\"  width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"1.8\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n  <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n  <path d=\"M4 8v-2a2 2 0 0 1 2 -2h2\"></path>\r\n  <path d=\"M4 16v2a2 2 0 0 0 2 2h2\"></path>\r\n  <path d=\"M16 4h2a2 2 0 0 1 2 2v2\"></path>\r\n  <path d=\"M16 20h2a2 2 0 0 0 2 -2v-2\"></path>\r\n</svg>`,\r\n  \"bs5-alert\": `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"\" width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" stroke-width=\"1\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n<path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n<path d=\"M12 8v4\"></path>\r\n<path d=\"M12 16h.01\"></path>\r\n</svg>`,\r\n  \"bs5-alert-circle\": `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"\" width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" stroke-width=\"1\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n<path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n<path d=\"M3 12a9 9 0 1 0 18 0a9 9 0 0 0 -18 0\"></path>\r\n<path d=\"M12 8v4\"></path>\r\n<path d=\"M12 16h.01\"></path>\r\n</svg>`,\r\n  \"bs5-help\": `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"\" width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" stroke-width=\"1\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n<path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n<path d=\"M12 16v.01\"></path>\r\n<path d=\"M12 13a2 2 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483\"></path>\r\n</svg>`,\r\n  \"bs5-help-circle\": `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"\" width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" stroke-width=\"1\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n<path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n<path d=\"M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0\"></path>\r\n<path d=\"M12 17l0 .01\"></path>\r\n<path d=\"M12 13.5a1.5 1.5 0 0 1 1 -1.5a2.6 2.6 0 1 0 -3 -4\"></path>\r\n</svg>`,\r\n  \"bs5-info\": `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"\" width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" stroke-width=\"1\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n<path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n<path d=\"M12 9h.01\"></path>\r\n<path d=\"M11 12h1v4h1\"></path>\r\n</svg>`,\r\n  \"bs5-info-circle\": `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"\" width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" stroke-width=\"1\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n<path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n<path d=\"M3 12a9 9 0 1 0 18 0a9 9 0 0 0 -18 0\"></path>\r\n<path d=\"M12 9h.01\"></path>\r\n<path d=\"M11 12h1v4h1\"></path>\r\n</svg>`,\r\n  \"bs5-reload\": `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"\" width=\"48\" height=\"48\" viewBox=\"0 0 24 24\" stroke-width=\"1\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n<path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n<path d=\"M19.933 13.041a8 8 0 1 1 -9.925 -8.788c3.899 -1 7.935 1.007 9.425 4.747\"></path>\r\n<path d=\"M20 4v5h-5\"></path>\r\n</svg>`,\r\n  \"bs5-code\": `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"\" width=\"3.5rem\" height=\"3.5rem\" viewBox=\"0 0 24 24\" stroke-width=\"1\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n  <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n  <path d=\"M7 8l-4 4l4 4\"></path>\r\n  <path d=\"M17 8l4 4l-4 4\"></path>\r\n  <path d=\"M14 4l-4 16\"></path>\r\n</svg>`,\r\n\r\n  \"bs5-alert-danger\": `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"text-danger\" width=\"3.5rem\" height=\"3.5rem\" viewBox=\"0 0 24 24\" stroke-width=\"1\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n<path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n<path d=\"M10.24 3.957l-8.422 14.06a1.989 1.989 0 0 0 1.7 2.983h16.845a1.989 1.989 0 0 0 1.7 -2.983l-8.423 -14.06a1.989 1.989 0 0 0 -3.4 0z\"></path>\r\n<path d=\"M12 9v4\"></path>\r\n<path d=\"M12 17h.01\"></path>\r\n</svg>`,\r\n\r\n  \"bs5-alert-warning\": `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"text-warning\" width=\"3.5rem\" height=\"3.5rem\" viewBox=\"0 0 24 24\" stroke-width=\"1\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n<path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n<path d=\"M10.24 3.957l-8.422 14.06a1.989 1.989 0 0 0 1.7 2.983h16.845a1.989 1.989 0 0 0 1.7 -2.983l-8.423 -14.06a1.989 1.989 0 0 0 -3.4 0z\"></path>\r\n<path d=\"M12 9v4\"></path>\r\n<path d=\"M12 17h.01\"></path>\r\n</svg>`,\r\n\r\n  \"bs5-alert-success\": `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"text-success\" width=\"3.5rem\" height=\"3.5rem\" viewBox=\"0 0 24 24\" stroke-width=\"1\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n<path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n<path d=\"M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0\"></path>\r\n<path d=\"M9 12l2 2l4 -4\"></path>\r\n</svg>`,\r\n  \"bs5-point\": `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-point\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n<path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n<path d=\"M12 12m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0\"></path>\r\n</svg>`\r\n};\r\n\r\n/**\r\n * Creates an icon element with the given name, class, and style.\r\n * @param {string} iconName - The name of the icon.\r\n * @param {string} iconClass - The class of the icon.\r\n * @param {string} iconStyle - The style of the icon.\r\n * @returns {HTMLElement} - The icon element.\r\n */\r\nexport function makeIcon(iconName = \"\", iconClass = \"\", iconStyle = \"\") {\r\n  iconName = iconName.replace(/\\s+/g, \" \");\r\n  iconClass = iconClass.replace(/\\s+/g, \" \");\r\n  iconStyle = iconStyle.replace(/\\s+/g, \" \");\r\n  // create a new icon element\r\n  let iconElement = document.createElement(\"i\");\r\n  if (!iconName) {\r\n    return iconElement;\r\n  }\r\n\r\n  // check if the icon is in the default icon map\r\n  const defaultIcon = BS5_DIALOG_DEFAULT_ICONS[iconName];\r\n  if (defaultIcon) {\r\n    // check if the default icon is an SVG string\r\n    if (defaultIcon.startsWith(\"<svg\")) {\r\n      iconElement.innerHTML = defaultIcon;\r\n      iconElement = iconElement.firstChild;\r\n    } else {\r\n      iconElement.classList.add(...defaultIcon.trim().split(\" \"));\r\n    }\r\n  } else {\r\n    // assume the icon is a class name or SVG string\r\n    if (iconName.startsWith(\"<svg\")) {\r\n      iconElement.innerHTML = iconName;\r\n      iconElement = iconElement.firstChild;\r\n    } else {\r\n      if (iconName.trim()) {\r\n        iconElement.classList.add(...iconName.trim().split(\" \"));\r\n      }\r\n    }\r\n  }\r\n\r\n  // add iconClass to the icon element\r\n  if (iconClass.trim()) {\r\n    iconElement.classList.add(...iconClass.trim().split(\" \"));\r\n  }\r\n\r\n  // add custom styles to the icon element\r\n  if (iconStyle.trim()) {\r\n    const styles = iconStyle.split(\";\");\r\n    styles.forEach(style => {\r\n      const [property, value] = style.split(\":\");\r\n      if (property && value) {\r\n        iconElement.style.setProperty(property.trim(), value.trim());\r\n      }\r\n    });\r\n  }\r\n\r\n  return iconElement;\r\n}\r\n","import { getMaxZIndex, triggerEvent, observeElement, getTextClass } from \"../utils.js\";\r\nimport { makeIcon } from \"../resource/icons.js\";\r\nimport { initializeBootstrapComponents } from \"../utils/bootstrapInit.js\";\r\n\r\n/**\r\n * Displays a message with customizable options\r\n * @param {string} message - The message to display\r\n * @param {Object} options - The options to customize the message display\r\n * @param {string} options.position - The position of the message on the screen (default: \"center\")\r\n * @param {string} options.type - The type of message (default: \"dark\")\r\n * @param {boolean} options.closeBtn - Whether to display a close button (default: false)\r\n * @param {string} options.background - The background color of the message (default: \"\")\r\n * @param {string} options.textColor - The text color of the message (default: \"\")\r\n * @param {string} options.fontsize - The font size of the message (default: \"\")\r\n * @param {string} options.icon - The icon to display with the message (default: \"\")\r\n * @param {string} options.iconClass - The class of the icon to display with the message (default: \"\")\r\n * @param {string} options.iconStyle - The style of the icon to display with the message (default: \"\")\r\n * @param {number} options.timeout - The time in milliseconds before the message disappears (default: 3000)\r\n * @param {function} options.onClosed - The function to call after the message is closed (default: function() {})\r\n */\r\nexport function message(message, options = {}) {\r\n  const defaultOptions = {\r\n    position: \"center\",\r\n    type: \"dark\", // Set default type directly\r\n    closeBtn: false,\r\n    background: \"\",\r\n    textColor: \"\",\r\n    fontsize: \"\",\r\n    icon: \"\",\r\n    iconClass: \"\",\r\n    iconStyle: \"\",\r\n    timeout: 3000,\r\n    onClosed: () => { } // Use arrow function\r\n  };\r\n\r\n  options = { ...defaultOptions, ...options };\r\n\r\n  const messageElement = document.createElement(\"div\");\r\n  const messageBodyElement = document.createElement(\"div\");\r\n\r\n  // Setup observers\r\n  observeElement(messageElement, {\r\n    created: () => triggerEvent(messageElement, \"bs5:dialog:message:created\", { options, el: messageElement }),\r\n    rendered: () => {\r\n      triggerEvent(messageElement, \"bs5:dialog:message:rendered\", { options, el: messageElement });\r\n      initializeBootstrapComponents(messageElement);\r\n    },\r\n    hidden: () => {\r\n      options.onClosed?.();\r\n      triggerEvent(messageElement, \"bs5:dialog:message:hidden\", { options, el: messageElement });\r\n    },\r\n    remove: () => triggerEvent(messageElement, \"bs5:dialog:message:remove\", { options, el: messageElement })\r\n  });\r\n\r\n  // Setup message element\r\n  messageElement.classList.add(\"bs5-dialog-msg\", `bs5-dialog-msg-${options.position}`);\r\n  messageElement.style.setProperty(\"z-index\", getMaxZIndex() + 1);\r\n  messageElement.setAttribute(\"role\", \"alert\");\r\n\r\n  // Setup message body\r\n  const textColor = getTextClass(`bg-${options.type}`);\r\n  messageBodyElement.classList.add(\r\n    `bg-${options.type}`,\r\n    \"text-start\",\r\n    textColor,\r\n    \"rounded-1\",\r\n    \"py-0\",\r\n    \"ps-3\",\r\n    \"pe-2\",\r\n    \"fw-normal\"\r\n  );\r\n\r\n  // Set styles\r\n  Object.assign(messageBodyElement.style, {\r\n    height: \"3rem\",\r\n    lineHeight: \"3rem\",\r\n    padding: \"0.375rem 1px\",\r\n    background: options.background || \"\",\r\n    color: options.textColor || \"\",\r\n    fontSize: options.fontsize || \"\"\r\n  });\r\n\r\n  messageBodyElement.innerHTML = `<span class=\"bs5-dialog-msg-content\">${message}</span>`;\r\n\r\n  // Add icon if specified\r\n  if (options.icon) {\r\n    const iconElement = makeIcon(options.icon, options.iconClass, options.iconStyle);\r\n    iconElement.style.setProperty(\"margin-inline-end\", \"8px\");\r\n    iconElement.style.setProperty(\"margin-bottom\", \"4px\");\r\n    messageBodyElement.prepend(iconElement);\r\n  }\r\n\r\n  // Add close button if specified\r\n  if (options.closeBtn) {\r\n    const closeBtn = makeIcon(\r\n      `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" style=\"margin-bottom:4px;cursor:pointer\"  onMouseOver=\"this.style.color='#e0e0e0;'\" onMouseOut=\"this.style.color='#eaeaea'\"  class=\"btn-x\"  stroke-width=\"1\"  viewBox=\"0 0 24 24\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n        <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n        <path d=\"M18 6l-12 12\"></path>\r\n        <path d=\"M6 6l12 12\"></path>\r\n      </svg>`,\r\n      \"btn-x\",\r\n      \"\"\r\n    );\r\n    closeBtn.role = \"button\";\r\n    closeBtn.style.setProperty(\"margin-inline-start\", \"8px\");\r\n    closeBtn.setAttribute(\"aria-label\", \"Close\");\r\n    messageBodyElement.appendChild(closeBtn);\r\n  }\r\n\r\n  messageElement.appendChild(messageBodyElement);\r\n  document.body.appendChild(messageElement);\r\n\r\n  function hideMessage() {\r\n    messageElement.classList.add(\"bs5-dialog-msg-hide\");\r\n    setTimeout(() => {\r\n      messageElement.style.display = \"none\";\r\n      setTimeout(() => messageElement.remove(), 500);\r\n    }, 300);\r\n  }\r\n\r\n  // Setup timeout\r\n  if (options.timeout) {\r\n    setTimeout(hideMessage, options.timeout);\r\n  }\r\n\r\n  // Setup close button click handler\r\n  const btnX = messageElement.querySelector(\".btn-x\");\r\n  if (btnX) {\r\n    btnX.addEventListener(\"click\", hideMessage);\r\n  }\r\n\r\n  // Add hide method to message element\r\n  messageElement.hide = hideMessage;\r\n\r\n  // Add hide method to event target if it exists\r\n  if (event?.target) {\r\n    event.target.hide = hideMessage;\r\n  }\r\n\r\n  return {\r\n    el: messageElement,\r\n    message,\r\n    options,\r\n    hide: hideMessage\r\n  };\r\n}\r\n\r\nexport const msg = message;\r\n","import {\r\n  makeRequest,\r\n  isUrlOrPath,\r\n  makeDraggable,\r\n  makeResizable,\r\n  genDialogId,\r\n  setModalWrapper,\r\n  replayLock,\r\n  triggerEvent,\r\n  observeElement\r\n} from \"../utils.js\";\r\nimport * as i18n from \"../i18n.js\";\r\n// import { Modal as bs5dialogModal } from \"bootstrap\";\r\nimport { initializeBootstrapComponents, checkBootstrapAvailability } from \"../utils/bootstrapInit.js\";\r\nimport { makeIcon } from \"../resource/icons.js\";\r\nimport { message } from \"./message.js\";\r\n\r\n/**\r\n * Loads content into a Bootstrap 5 modal dialog with customizable options.\r\n * @param {string} content - The content to be loaded into the modal dialog. Can be a URL or HTML content.\r\n * @param {Object} options - An object containing customizable options for the modal dialog.\r\n * @param {string} options.title - The title of the modal dialog.\r\n * @param {string} options.type - The type of the modal dialog, which determines the color of the status bar.\r\n * @param {string} options.size - The size of the modal dialog.\r\n * @param {string} options.id - The ID of the modal dialog.\r\n * @param {boolean} options.centered - Whether the modal dialog should be centered on the screen.\r\n * @param {boolean} options.scrollable - Whether the modal dialog should be scrollable.\r\n * @param {boolean} options.maximize - Whether the modal dialog should be maximize.\r\n * @param {boolean} options.backdrop - Whether the modal dialog should have a backdrop.\r\n * @param {boolean} options.focus - Whether the modal dialog should be focused.\r\n * @param {boolean} options.keyboard - Whether the keyboard should be enabled for the modal dialog.\r\n * @param {boolean} options.draggable - Whether the modal dialog should be draggable.\r\n * @param {boolean} options.resizable - Whether the modal dialog should be resizable.\r\n * @param {string} options.btnOkText - The text to display on the OK button.\r\n * @param {string} options.btnCancelText - The text to display on the Cancel button.\r\n * @param {function} options.onShow - A function to be called when the modal dialog is shown.\r\n * @param {function} options.onShown - A function to be called after the modal dialog is shown.\r\n * @param {function} options.onHide - A function to be called when the modal dialog is hidden.\r\n * @param {function} options.onHidden - A function to be called after the modal dialog is hidden.\r\n * @param {boolean} options.isForm - Whether the modal dialog should be a form.\r\n * @param {function} options.onSubmit - A function to be called when the modal dialog is submitted.\r\n * @param {function} options.onSubmitSuccess - A function to be called after the modal dialog is successfully submitted.\r\n * @param {function} options.onSubmitError - A function to be called if there is an error submitting the modal dialog.\r\n * @param {function} options.onSubmitDone - A function to be called after the modal dialog is submitted, regardless of success or failure.\r\n */\r\nexport async function load(content, options = {}) {\r\n  // Check if bootstrap is available\r\n  if (!checkBootstrapAvailability()) {\r\n    return { el: null, content, options };\r\n  }\r\n\r\n  const defaultOptions = {\r\n    title: \"\",\r\n    type: \"danger\",\r\n    size: \"lg\",\r\n    id: \"\",\r\n    centered: true,\r\n    scrollable: true,\r\n    maximize: false,\r\n    backdrop: false,\r\n    focus: true,\r\n    keyboard: true,\r\n    draggable: true,\r\n    resizable: true,\r\n    btnOkText: \"\",\r\n    btnCancelText: \"\",\r\n    onShow: null,\r\n    onShown: null,\r\n    onHidden: null,\r\n    isForm: true,\r\n    onSubmit: null,\r\n    onSubmitSuccess: () => { },\r\n    onSubmitError: () => { },\r\n    onSubmitDone: () => { }\r\n  };\r\n\r\n  options = { ...defaultOptions, ...options };\r\n\r\n  // Get or create modal element\r\n  const modalElement = options.id && document.getElementById(options.id)\r\n    ? document.getElementById(options.id)\r\n    : (() => {\r\n      const el = setModalWrapper();\r\n      el.setAttribute(\"id\", options.id || genDialogId());\r\n      return el;\r\n    })();\r\n\r\n  // Set up event observers\r\n  const handleFormSubmit = async (form, okBtn, modalInstance) => {\r\n    try {\r\n\r\n      okBtn.disabled = true;\r\n      const formData = new FormData(form);\r\n      const eventData = {\r\n        options,\r\n        formEl: form,\r\n        formAction: form.action,\r\n        formMethod: form.method,\r\n        formData\r\n      };\r\n\r\n      triggerEvent(modalElement, \"bs5:dialog:form:submit\", eventData);\r\n      options.onSubmit?.(modalElement);\r\n\r\n      const submitResult = await makeRequest(form.action, form.method, {}, formData);\r\n      eventData.submitResult = submitResult;\r\n\r\n      triggerEvent(modalElement, \"bs5:dialog:form:submit:complete\", eventData);\r\n      options.onSubmitDone?.(submitResult);\r\n\r\n      if (submitResult.isSuccess) {\r\n        triggerEvent(modalElement, \"bs5:dialog:form:submit:success\", eventData);\r\n        options.onSubmitSuccess?.(submitResult);\r\n        modalInstance.hide();\r\n      } else {\r\n        triggerEvent(modalElement, \"bs5:dialog:form:submit:error\", eventData);\r\n        options.onSubmitError?.(submitResult);\r\n        message(submitResult.content);\r\n      }\r\n    } catch (error) {\r\n      console.error('Form submission error:', error);\r\n      message('An error occurred during form submission');\r\n      options.onSubmitError?.({ isSuccess: false, content: error.message });\r\n    } finally {\r\n      okBtn.disabled = false;\r\n    }\r\n  };\r\n\r\n  observeElement(modalElement, {\r\n    created: () => {\r\n      options.onShow?.(modalElement);\r\n      triggerEvent(modalElement, \"bs5:dialog:load:created\", { options, el: modalElement });\r\n    },\r\n    rendered: () => {\r\n      options.onShown?.(modalElement);\r\n      initializeBootstrapComponents(modalElement);\r\n\r\n      if (options.backdrop === false) {\r\n        document.querySelector(\".modal-backdrop\")?.remove();\r\n        modalElement.style.pointerEvents = \"none\";\r\n      }\r\n\r\n      triggerEvent(modalElement, \"bs5:dialog:load:rendered\", { options, el: modalElement });\r\n      const modalInstance = bootstrap.Modal.getOrCreateInstance(modalElement);\r\n\r\n      // Handle cancel button\r\n      const cancelBtn = modalElement.querySelector(\".modal-footer .btn-cancel\");\r\n      if (cancelBtn) {\r\n        cancelBtn.addEventListener(\"click\", () => {\r\n          replayLock(cancelBtn);\r\n          triggerEvent(modalElement, \"bs5:dialog:load:cancel\", { options });\r\n          options.onCancel?.();\r\n          modalInstance.hide();\r\n        });\r\n      }\r\n\r\n      // Handle form if present\r\n      const form = modalElement.querySelector(\"form\");\r\n      if (options.isForm && form) {\r\n        const modalFooter = modalElement.querySelector(\".modal-footer\");\r\n        modalFooter.classList.remove(\"d-none\");\r\n\r\n        const submitBtn = form.querySelector('button[type=\"submit\"]');\r\n        const okBtn = modalElement.querySelector(\".modal-footer .btn-ok\");\r\n\r\n        if (submitBtn) {\r\n          submitBtn.style.display = \"none\";\r\n          okBtn.textContent = submitBtn.textContent;\r\n        }\r\n        okBtn.setAttribute(\"type\", \"submit\");\r\n\r\n        form.addEventListener(\"submit\", e => e.preventDefault());\r\n        okBtn.addEventListener(\"click\", async event => {\r\n          event.preventDefault();\r\n          replayLock(okBtn);\r\n          await handleFormSubmit(form, okBtn, modalInstance);\r\n        });\r\n\r\n        // Add support for form submission with Enter key\r\n        form.addEventListener(\"keypress\", event => {\r\n          if (event.key === \"Enter\" && !event.shiftKey) {\r\n            event.preventDefault();\r\n            okBtn.click();\r\n          }\r\n        });\r\n      }\r\n    },\r\n    hidden: () => {\r\n      options.onHidden?.(modalElement);\r\n      triggerEvent(modalElement, \"bs5:dialog:load:hidden\", { options, el: modalElement });\r\n    },\r\n    remove: () => {\r\n      triggerEvent(modalElement, \"bs5:dialog:load:remove\", { options, el: modalElement });\r\n    },\r\n    resize: () => {\r\n      triggerEvent(modalElement, \"bs5:dialog:load:resize\", { options, el: modalElement });\r\n    },\r\n    dragged: () => {\r\n      triggerEvent(modalElement, \"bs5:dialog:load:dragged\", { options, el: modalElement });\r\n    }\r\n  });\r\n\r\n  // Handle URL content\r\n  if (isUrlOrPath(content)) {\r\n    const apiUrl = content;\r\n    const res = await makeRequest(apiUrl, \"GET\");\r\n    content = res.content;\r\n\r\n    if (content.includes(\"<!DOCTYPE html>\") || content.includes(\"<html\")) {\r\n      content = `<iframe src=\"${apiUrl}\" width='100%' height='100%'></iframe>`;\r\n      options.scrollable = false;\r\n    }\r\n  }\r\n\r\n  // Build modal HTML\r\n  modalElement.innerHTML = `\r\n    <div class=\"modal-dialog ${options.maximize ? \"modal-fullscreen\" : `modal-${options.size}`} \r\n         ${options.centered ? \"modal-dialog-centered\" : \"\"} \r\n         ${options.scrollable ? \"modal-dialog-scrollable\" : \"\"}\" role=\"document\">\r\n      <div class=\"modal-content shadow\">\r\n        <div class=\"modal-status bg-${options.type}\"></div>\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\">${options.title}</h5>\r\n          <div class='modal-maximize-toggle'></div>\r\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n        </div>\r\n        <div class=\"modal-body\" ${options.scrollable ? \"style='height:60vh'\" : \"\"}>\r\n          ${content}\r\n        </div>\r\n        <div class=\"modal-footer d-none\">\r\n          <button type=\"button\" class=\"btn me-auto btn-cancel\" data-bs-dismiss=\"modal\">\r\n            ${options.btnCancelText || i18n.getConfig(\"cancel\")}\r\n          </button>\r\n          <button type=\"button\" class=\"btn btn-ok btn-${options.type}\">\r\n            ${options.btnOkText || i18n.getConfig(\"save\")}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `;\r\n\r\n  // Set up draggable/resizable\r\n  if (options.draggable) {\r\n    makeDraggable(modalElement, modalElement.querySelector(\".modal-header\"));\r\n  }\r\n  if (options.resizable) {\r\n    makeResizable(modalElement.querySelector(\".modal-content\"));\r\n  }\r\n\r\n  // Set up maximize/minimize buttons\r\n  const maximizeToggle = modalElement.querySelector(\".modal-maximize-toggle\");\r\n  const iconMinimizeElement = makeIcon(\r\n    \"bs5-minimize\",\r\n    `btn-minimize btn-maximize-toggle ${options.maximize ? \"\" : \"d-none\"}`,\r\n    \"width:1.438rem;height:1.438rem;cursor:pointer;\"\r\n  );\r\n  const iconMaximizeElement = makeIcon(\r\n    \"bs5-maximize\",\r\n    `btn-maximize btn-maximize-toggle ${options.maximize ? \"d-none\" : \"\"}`,\r\n    \"width:1.438rem;height:1.438rem;cursor:pointer;\"\r\n  );\r\n  maximizeToggle.append(iconMinimizeElement, iconMaximizeElement);\r\n\r\n  document.body.appendChild(modalElement);\r\n\r\n  // Initialize and show modal\r\n  const modalInstance = bootstrap.Modal.getOrCreateInstance(modalElement, {\r\n    keyboard: options.keyboard,\r\n    focus: options.focus,\r\n    backdrop: options.backdrop\r\n  });\r\n  modalInstance.show();\r\n\r\n  // Handle maximize/minimize\r\n  const modalDialog = modalElement.querySelector(\".modal-dialog\");\r\n  modalElement.querySelectorAll(\".btn-maximize-toggle\").forEach(el => {\r\n    el.addEventListener(\"click\", function () {\r\n      if (this.classList.contains(\"btn-maximize\")) {\r\n        triggerEvent(modalElement, \"bs5:dialog:load:maximize\", { options });\r\n        modalDialog.parentElement.style.top = 0;\r\n        modalDialog.parentElement.style.left = 0;\r\n\r\n        const modalContent = modalDialog.querySelector(\".modal-content\");\r\n        modalContent.style.width = null;\r\n        modalContent.style.height = null;\r\n\r\n        modalDialog.classList.add(\"modal-fullscreen\");\r\n        modalDialog.classList.remove(`modal-${options.size}`);\r\n        this.classList.add(\"d-none\");\r\n        modalElement.querySelector(\".btn-minimize\").classList.remove(\"d-none\");\r\n      } else if (this.classList.contains(\"btn-minimize\")) {\r\n        triggerEvent(modalElement, \"bs5:dialog:load:minimize\", { options });\r\n        modalDialog.classList.remove(\"modal-fullscreen\");\r\n        modalDialog.classList.add(`modal-${options.size}`);\r\n        this.classList.add(\"d-none\");\r\n        modalElement.querySelector(\".btn-maximize\").classList.remove(\"d-none\");\r\n      }\r\n    });\r\n  });\r\n\r\n  return {\r\n    el: modalElement,\r\n    content,\r\n    options\r\n  };\r\n}\r\n","import { getOverlapDimensions, genDialogId, triggerEvent, observeElement } from \"../utils.js\";\r\nimport { initializeBootstrapComponents, checkBootstrapAvailability } from \"../utils/bootstrapInit.js\";\r\n\r\n/**\r\n * Creates an offcanvas element with the given content and options.\r\n * @param {string} content - The content to be displayed in the offcanvas.\r\n * @param {Object} options - The options for the offcanvas.\r\n * @param {string} options.title - The title of the offcanvas.\r\n * @param {string} options.direction - The direction of the offcanvas.\r\n * @param {string} options.size - The size of the offcanvas.\r\n * @param {string} options.id - The id of the offcanvas.\r\n * @param {boolean} options.backdrop - Whether or not to show a backdrop.\r\n * @param {boolean} options.scroll - Whether or not to allow scrolling.\r\n * @param {boolean} options.dark - Whether or not to use dark mode.\r\n * @param {boolean} options.accordion - Whether or not to use accordion mode.\r\n * @param {string} options.container - The container for the offcanvas.\r\n * @param {Function} options.onStart - The function to be called when the offcanvas starts.\r\n * @param {Function} options.onShown - The function to be called when the offcanvas is shown.\r\n * @param {Function} options.onHidden - The function to be called when the offcanvas is hidden.\r\n */\r\nexport function offcanvas(content, options = {}) {\r\n  if (!checkBootstrapAvailability()) {\r\n    return { el: null, content, options };\r\n  }\r\n\r\n  const defaultOptions = {\r\n    title: \"\",\r\n    direction: \"start\",\r\n    size: \"\",\r\n    id: \"\",\r\n    backdrop: true,\r\n    scroll: true,\r\n    dark: false,\r\n    accordion: true,\r\n    container: \"\",\r\n    onShown: () => { },\r\n    onHidden: () => { }\r\n  };\r\n  options = { ...defaultOptions, ...options };\r\n\r\n  const container = document.querySelector(options.container || \"body\");\r\n  const accordionDirection = getAccordionDirection(options.direction);\r\n  let prevContainerPadding;\r\n\r\n  const offcanvasElement = options.id && document.getElementById(options.id)\r\n    ? document.getElementById(options.id)\r\n    : createOffcanvasElement(options);\r\n\r\n  setupOffcanvasObserver(offcanvasElement, options, container, accordionDirection, prevContainerPadding);\r\n  setupOffcanvasAttributes(offcanvasElement, options);\r\n  setupOffcanvasContent(offcanvasElement, content, options);\r\n\r\n  document.body.appendChild(offcanvasElement);\r\n  const offcanvasInstance = bootstrap.Offcanvas.getOrCreateInstance(offcanvasElement);\r\n  offcanvasInstance.toggle();\r\n\r\n  return {\r\n    el: offcanvasElement,\r\n    content,\r\n    options\r\n  };\r\n}\r\n\r\nfunction getAccordionDirection(direction) {\r\n  return direction === \"start\" ? \"left\"\r\n    : direction === \"end\" ? \"right\"\r\n      : direction;\r\n}\r\n\r\nfunction createOffcanvasElement(options) {\r\n  const element = document.createElement(\"div\");\r\n  element.setAttribute(\"id\", options.id || genDialogId());\r\n  return element;\r\n}\r\n\r\nfunction setupOffcanvasObserver(element, options, container, accordionDirection, prevContainerPadding) {\r\n  observeElement(element, {\r\n    created: () => {\r\n      triggerEvent(element, \"bs5:dialog:offcanvas:created\", { options, el: element });\r\n    },\r\n    rendered: () => {\r\n      prevContainerPadding = document.body.style.getPropertyValue(`padding-${accordionDirection}`);\r\n      if (options.accordion) {\r\n        const overlapDimensions = getOverlapDimensions(element, container);\r\n        const paddingSize = [\"left\", \"right\"].includes(accordionDirection)\r\n          ? `${overlapDimensions.overlapWidth}px`\r\n          : `${overlapDimensions.overlapHeight}px`;\r\n        container.style.setProperty(`padding-${accordionDirection}`, paddingSize);\r\n      }\r\n      triggerEvent(element, \"bs5:dialog:offcanvas:rendered\", { options, el: element });\r\n      initializeBootstrapComponents(element);\r\n      options.onShown?.(element);\r\n    },\r\n    hidden: () => {\r\n      if (options.accordion) {\r\n        container.style.setProperty(`padding-${accordionDirection}`, prevContainerPadding);\r\n      }\r\n      triggerEvent(element, \"bs5:dialog:offcanvas:hidden\", { options, el: element });\r\n      options.onHidden?.(element);\r\n    },\r\n    remove: () => {\r\n      triggerEvent(element, \"bs5:dialog:offcanvas:remove\", { options, el: element });\r\n    }\r\n  });\r\n}\r\n\r\nfunction setupOffcanvasAttributes(element, options) {\r\n  element.classList.add(\"offcanvas\", \"bs5dialog-offcanvas\", `offcanvas-${options.direction}`);\r\n  element.setAttribute(\"tabindex\", \"-1\");\r\n  element.setAttribute(\"role\", \"dialog\");\r\n\r\n  if (options.scroll === true || options.scroll === \"true\") {\r\n    element.setAttribute(\"data-bs-scroll\", \"true\");\r\n  }\r\n  element.setAttribute(\"data-bs-backdrop\", options.backdrop);\r\n\r\n  if (options.direction === \"start\" || options.direction === \"end\") {\r\n    element.style.width = options.size;\r\n  } else if (options.direction === \"top\" || options.direction === \"bottom\") {\r\n    element.style.height = options.size;\r\n  }\r\n}\r\n\r\nfunction setupOffcanvasContent(element, content, options) {\r\n  element.innerHTML = `\r\n    <div class=\"offcanvas-header\">\r\n      <h5 class=\"offcanvas-title\">${options.title || \"\"}</h5>\r\n      <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"offcanvas\" data-bs-target=\"#${options.id}\" aria-label=\"Close\"></button>\r\n    </div>\r\n    <div class=\"offcanvas-body\">\r\n      ${content}\r\n    </div>`;\r\n\r\n  if (options.dark === true || options.dark === \"true\") {\r\n    element.classList.add(\"text-bg-dark\");\r\n    element.querySelector(\".btn-close\").classList.add(\"btn-close-white\");\r\n  }\r\n}\r\n","import { setModalWrapper, replayLock, triggerEvent, genDialogId, observeElement } from \"../utils.js\";\r\nimport { makeIcon } from \"../resource/icons.js\";\r\nimport * as i18n from \"../i18n.js\";\r\nimport { initializeBootstrapComponents, checkBootstrapAvailability } from \"../utils/bootstrapInit.js\";\r\n\r\n/**\r\n * Displays an alert modal with the given content and options.\r\n * @param {string} content - The content to display in the alert modal.\r\n * @param {Object} options - The options for the alert modal.\r\n * @param {string} options.title - The title of the alert modal.\r\n * @param {string} options.type - The type of the alert modal (e.g. \"success\", \"warning\", \"danger\").\r\n * @param {string} options.size - The size of the alert modal (e.g. \"sm\", \"md\", \"lg\").\r\n * @param {string} options.id - The ID of the alert modal.\r\n * @param {string} options.btnOkText - The text to display on the OK button.\r\n * @param {string} options.icon - The name of the icon to display in the alert modal.\r\n * @param {string} options.iconClass - The CSS class for the icon.\r\n * @param {string} options.iconStyle - The CSS style for the icon.\r\n * @param {function} options.onOk - The function to call when the OK button is clicked.\r\n * @param {number} options.timeout - The time in milliseconds before the alert modal automatically closes.\r\n * @returns {Object} - An object containing the alert modal element, content, and options.\r\n */\r\nexport function alert(content = \"\", options = {}) {\r\n  // Check if bootstrap is available\r\n  if (!checkBootstrapAvailability()) {\r\n    return { el: null, content, options };\r\n  }\r\n\r\n  const defaultOptions = {\r\n    title: \"\",\r\n    type: \"success\",\r\n    size: \"md\",\r\n    id: \"\",\r\n    btnOkText: \"\",\r\n    icon: null,\r\n    iconClass: \"\",\r\n    iconStyle: \"\",\r\n    onOk: null,\r\n    timeout: 0\r\n  };\r\n\r\n  options = { ...defaultOptions, ...options };\r\n\r\n  // Get or create modal element\r\n  const modalElement = options.id && document.getElementById(options.id)\r\n    ? document.getElementById(options.id)\r\n    : (() => {\r\n      const el = setModalWrapper();\r\n      el.setAttribute(\"id\", options.id || genDialogId());\r\n      return el;\r\n    })();\r\n\r\n  // Set up event observers\r\n  observeElement(modalElement, {\r\n    created: () => {\r\n      triggerEvent(modalElement, \"bs5:dialog:alert:created\", { options, el: modalElement });\r\n    },\r\n    rendered: () => {\r\n      triggerEvent(modalElement, \"bs5:dialog:alert:rendered\", { options, el: modalElement });\r\n      const modalInstance = bootstrap.Modal.getOrCreateInstance(modalElement);\r\n      initializeBootstrapComponents(modalElement);\r\n\r\n      // Handle OK button click\r\n      const okBtn = modalElement.querySelector(\".modal-footer .btn-ok\");\r\n      if (okBtn) {\r\n        okBtn.addEventListener(\"click\", () => {\r\n          replayLock(okBtn);\r\n          triggerEvent(modalElement, \"bs5:dialog:alert:ok\", { options });\r\n          options.onOk?.();\r\n          modalInstance.hide();\r\n        });\r\n      }\r\n\r\n      // Handle Cancel button click if present\r\n      const cancelBtn = modalElement.querySelector(\".modal-footer .btn-cancel\");\r\n      if (cancelBtn) {\r\n        cancelBtn.addEventListener(\"click\", () => {\r\n          replayLock(cancelBtn);\r\n          triggerEvent(modalElement, \"bs5:dialog:alert:cancel\", { options });\r\n          options.onCancel?.();\r\n          modalInstance.hide();\r\n        });\r\n      }\r\n    },\r\n    hidden: () => {\r\n      triggerEvent(modalElement, \"bs5:dialog:alert:hidden\", { options, el: modalElement });\r\n    },\r\n    remove: () => {\r\n      triggerEvent(modalElement, \"bs5:dialog:alert:remove\", { options, el: modalElement });\r\n    }\r\n  });\r\n\r\n  // Build modal HTML\r\n  modalElement.classList.add(\"bs5dialog-modal-alert\");\r\n  modalElement.innerHTML = `\r\n    <div class=\"modal-dialog modal-${options.size || \"sm\"} modal-dialog-centered\" style=\"transform: none;\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-status bg-${options.type}\"></div>\r\n        <div class=\"modal-body text-center py-4\">\r\n          <div class='modal-icon'></div>\r\n          <h3 class=\"modal-title mb-2\">${options.title}</h3>\r\n          <div class=\"text-muted\">${content}</div>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <div class=\"w-100\">\r\n            <div class=\"row\">\r\n              <div class=\"col\"></div>\r\n              <div class=\"col\">\r\n                <button type=\"button\" class=\"w-100 text-truncate btn btn-default btn-ok btn-${options.type}\">\r\n                  ${options.btnOkText || i18n.getConfig(\"ok\")}\r\n                </button>\r\n              </div>\r\n              <div class=\"col\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `;\r\n\r\n  // Set up icon\r\n  if (options.type && options.icon == null) {\r\n    options.icon = `bs5-alert-${options.type}`;\r\n  }\r\n  const iconElement = makeIcon(options.icon, options.iconClass, options.iconStyle);\r\n  modalElement.querySelector(\".modal-icon\").appendChild(iconElement);\r\n\r\n  // Show modal\r\n  document.body.appendChild(modalElement);\r\n  const modalInstance = bootstrap.Modal.getOrCreateInstance(modalElement);\r\n  modalInstance.show();\r\n\r\n  // Clean up on hide\r\n  modalElement.addEventListener(\"hidden.bs.modal\", () => {\r\n    modalElement.remove();\r\n  });\r\n\r\n  // Handle auto-close timeout\r\n  if (options.timeout > 0) {\r\n    setTimeout(() => {\r\n      modalInstance.hide();\r\n    }, options.timeout);\r\n  }\r\n\r\n  return {\r\n    el: modalElement,\r\n    content,\r\n    options\r\n  };\r\n}\r\n","import { setModalWrapper, replayLock, triggerEvent, genDialogId, observeElement } from \"../utils.js\";\r\nimport { makeIcon } from \"../resource/icons.js\";\r\nimport * as i18n from \"../i18n.js\";\r\nimport { initializeBootstrapComponents, checkBootstrapAvailability } from \"../utils/bootstrapInit.js\";\r\n\r\n/**\r\n * Displays a confirmation modal with the given content and options.\r\n * @param {string} content - The content to display in the modal.\r\n * @param {Object} options - The options for the modal.\r\n * @param {string} options.title - The title of the modal.\r\n * @param {string} options.type - The type of the modal.\r\n * @param {string} options.id - The ID of the modal.\r\n * @param {string} options.size - The size of the modal.\r\n * @param {string} options.btnOkText - The text to display on the OK button.\r\n * @param {string} options.btnCancelText - The text to display on the Cancel button.\r\n * @param {string} options.icon - The icon to display in the modal.\r\n * @param {string} options.iconClass - The class of the icon to display in the modal.\r\n * @param {string} options.iconStyle - The style of the icon to display in the modal.\r\n * @param {function} options.onConfirm - The function to call when the OK button is clicked.\r\n * @param {function} options.onCancel - The function to call when the Cancel button is clicked.\r\n * @returns {Object} - An object containing the modal element, content, and options.\r\n */\r\nexport function confirm(content = \"\", options = {}) {\r\n  // Check if bootstrap is available\r\n  if (!checkBootstrapAvailability()) {\r\n    return { el: null, content, options };\r\n  }\r\n\r\n  const defaultOptions = {\r\n    title: i18n.getConfig(\"sure\"),\r\n    type: \"danger\",\r\n    id: \"\",\r\n    size: \"md\",\r\n    btnOkText: \"\",\r\n    btnCancelText: \"\",\r\n    icon: null,\r\n    iconClass: \"\",\r\n    iconStyle: \"\",\r\n    onConfirm: null,\r\n    onCancel: null\r\n  };\r\n\r\n  options = { ...defaultOptions, ...options };\r\n\r\n  // Get or create modal element\r\n  const modalElement = options.id && document.getElementById(options.id)\r\n    ? document.getElementById(options.id)\r\n    : (() => {\r\n      const el = setModalWrapper();\r\n      el.setAttribute(\"id\", options.id || genDialogId());\r\n      return el;\r\n    })();\r\n\r\n  modalElement.classList.add(\"bs5dialog-modal-confirm\");\r\n\r\n  // Set up event observers\r\n  observeElement(modalElement, {\r\n    created: () => {\r\n      triggerEvent(modalElement, \"bs5:dialog:confirm:created\", { options, el: modalElement });\r\n    },\r\n    rendered: () => {\r\n      triggerEvent(modalElement, \"bs5:dialog:confirm:rendered\", { options, el: modalElement });\r\n      const modalInstance = bootstrap.Modal.getOrCreateInstance(modalElement);\r\n      initializeBootstrapComponents(modalElement);\r\n\r\n      // Handle button clicks\r\n      const okBtn = modalElement.querySelector(\".modal-footer .btn-ok\");\r\n      const cancelBtn = modalElement.querySelector(\".modal-footer .btn-cancel\");\r\n\r\n      if (okBtn) {\r\n        okBtn.addEventListener(\"click\", () => {\r\n          replayLock(okBtn);\r\n          triggerEvent(modalElement, \"bs5:dialog:confirm:ok\", { options });\r\n          options.onConfirm?.();\r\n          modalInstance.hide();\r\n        });\r\n      }\r\n\r\n      if (cancelBtn) {\r\n        cancelBtn.addEventListener(\"click\", () => {\r\n          replayLock(cancelBtn);\r\n          triggerEvent(modalElement, \"bs5:dialog:confirm:cancel\", { options });\r\n          options.onCancel?.();\r\n          modalInstance.hide();\r\n        });\r\n      }\r\n    },\r\n    hidden: () => {\r\n      triggerEvent(modalElement, \"bs5:dialog:confirm:hidden\", { options, el: modalElement });\r\n    },\r\n    remove: () => {\r\n      triggerEvent(modalElement, \"bs5:dialog:confirm:remove\", { options, el: modalElement });\r\n    }\r\n  });\r\n\r\n  // Build modal HTML\r\n  modalElement.innerHTML = `\r\n    <div class=\"modal-dialog modal-${options.size} modal-dialog-centered\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-status bg-${options.type}\"></div>\r\n        <div class=\"modal-body text-center py-4\">\r\n          <div class='modal-icon'></div>\r\n          <h3 class=\"modal-title mb-1\">${options.title}</h3>\r\n          <div class=\"text-muted\">${content}</div>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <div class=\"w-100\">\r\n            <div class=\"row\">\r\n              <div class=\"col\">\r\n                <button type=\"button\" class=\"w-100 btn btn-default btn-cancel text-truncate mb-2\" data-bs-dismiss=\"modal\">\r\n                  ${options.btnCancelText || i18n.getConfig(\"cancel\")}\r\n                </button>\r\n              </div>\r\n              <div class=\"col\">\r\n                <button type=\"button\" class=\"w-100 btn btn-default btn-${options.type} btn-ok text-truncate mb-2\">\r\n                  ${options.btnOkText || i18n.getConfig(\"confirm\")}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `;\r\n\r\n  // Set up icon\r\n  if (options.type && options.icon == null) {\r\n    options.icon = `bs5-alert-${options.type}`;\r\n  }\r\n  const iconElement = makeIcon(options.icon, options.iconClass, options.iconStyle);\r\n  modalElement.querySelector(\".modal-icon\").appendChild(iconElement);\r\n\r\n  // Show modal\r\n  document.body.appendChild(modalElement);\r\n  const modalInstance = bootstrap.Modal.getOrCreateInstance(modalElement);\r\n  modalInstance.show();\r\n\r\n  // Clean up on hide\r\n  modalElement.addEventListener(\"hidden.bs.modal\", () => {\r\n    modalElement.remove();\r\n  });\r\n\r\n  return {\r\n    el: modalElement,\r\n    content,\r\n    options\r\n  };\r\n}\r\n","import { setModalWrapper, replayLock, triggerEvent, genDialogId, observeElement } from \"../utils.js\";\r\nimport { makeIcon } from \"../resource/icons.js\";\r\nimport * as i18n from \"../i18n.js\";\r\nimport { initializeBootstrapComponents, checkBootstrapAvailability } from \"../utils/bootstrapInit.js\";\r\n\r\n/**\r\n * Displays a prompt dialog with customizable options.\r\n * @param {string} content - The content to display in the dialog.\r\n * @param {Object} options - The options for the dialog.\r\n * @param {string} options.title - The title of the dialog.\r\n * @param {string} options.type - The type of the dialog.\r\n * @param {string} options.size - The size of the dialog.\r\n * @param {string} options.btnText - The text to display on the button.\r\n * @param {string} options.icon - The icon to display in the dialog.\r\n * @param {string} options.iconClass - The class of the icon to display in the dialog.\r\n * @param {string} options.iconStyle - The style of the icon to display in the dialog.\r\n * @param {boolean} options.required - Whether the input is required.\r\n * @param {boolean} options.secret - Whether the input should be hidden.\r\n * @param {function} options.onConfirm - The function to call when the user confirms the dialog.\r\n * @param {function} options.onCancel - The function to call when the user cancels the dialog.\r\n * @returns {Object} - An object containing the dialog element, content, and options.\r\n */\r\nexport function prompt(content, options = {}) {\r\n  // Check if bootstrap is available\r\n  if (!checkBootstrapAvailability()) {\r\n    return { el: null, content, options };\r\n  }\r\n\r\n  const defaultOptions = {\r\n    title: \"\",\r\n    type: \"secondary\",\r\n    size: \"md\",\r\n    btnText: \"\",\r\n    icon: null,\r\n    iconClass: \"\",\r\n    iconStyle: \"\",\r\n    required: true,\r\n    secret: false,\r\n    onConfirm: null,\r\n    onCancel: null\r\n  };\r\n\r\n  options = { ...defaultOptions, ...options };\r\n\r\n  // Get or create modal element\r\n  const modalElement = options.id && document.getElementById(options.id)\r\n    ? document.getElementById(options.id)\r\n    : (() => {\r\n      const el = setModalWrapper();\r\n      el.setAttribute(\"id\", options.id || genDialogId());\r\n      return el;\r\n    })();\r\n\r\n  const handleOkClick = (inputEl, modalInstance, okBtn) => {\r\n    replayLock(okBtn);\r\n    triggerEvent(modalElement, \"bs5:dialog:prompt:ok\", { options });\r\n    options.onConfirm?.(inputEl.value);\r\n    modalInstance.hide();\r\n  };\r\n\r\n  const handleCancelClick = (cancelBtn, modalInstance) => {\r\n    replayLock(cancelBtn);\r\n    triggerEvent(modalElement, \"bs5:dialog:prompt:cancel\", { options });\r\n    options.onCancel?.();\r\n    modalInstance.hide();\r\n  };\r\n\r\n  const handleInputKeyup = (event, inputEl, okBtn) => {\r\n    event.preventDefault();\r\n    triggerEvent(modalElement, \"bs5:dialog:prompt:typing\", { options, value: inputEl.value });\r\n    inputEl.value.length > 0 ? okBtn.classList.remove(\"disabled\") : okBtn.classList.add(\"disabled\");\r\n    if (event.keyCode === 13 && !okBtn.classList.contains(\"disabled\")) {\r\n      okBtn.click();\r\n    }\r\n  };\r\n\r\n  observeElement(modalElement, {\r\n    created: () => triggerEvent(modalElement, \"bs5:dialog:prompt:created\", { options, el: modalElement }),\r\n    rendered: () => {\r\n      triggerEvent(modalElement, \"bs5:dialog:prompt:rendered\", { options, el: modalElement });\r\n      const modalInstance = bootstrap.Modal.getOrCreateInstance(modalElement);\r\n      initializeBootstrapComponents(modalElement);\r\n\r\n      const inputEl = modalElement.querySelector(\".modal-body input\");\r\n      const okBtn = modalElement.querySelector(\".modal-footer .btn-ok\");\r\n      const cancelBtn = modalElement.querySelector(\".modal-footer .btn-cancel\");\r\n\r\n      inputEl.addEventListener(\"keyup\", (e) => handleInputKeyup(e, inputEl, okBtn));\r\n\r\n      if (okBtn) {\r\n        if (options.required) okBtn.classList.add(\"disabled\");\r\n        okBtn.addEventListener(\"click\", () => handleOkClick(inputEl, modalInstance, okBtn));\r\n      }\r\n\r\n      if (cancelBtn) {\r\n        cancelBtn.addEventListener(\"click\", () => handleCancelClick(cancelBtn, modalInstance));\r\n      }\r\n    },\r\n    hidden: () => triggerEvent(modalElement, \"bs5:dialog:prompt:hidden\", { options, el: modalElement }),\r\n    remove: () => triggerEvent(modalElement, \"bs5:dialog:prompt:remove\", { options, el: modalElement }),\r\n    resize: () => triggerEvent(modalElement, \"bs5:dialog:prompt:resize\", { options, el: modalElement }),\r\n    dragged: () => triggerEvent(modalElement, \"bs5:dialog:prompt:dragged\", { options, el: modalElement })\r\n  });\r\n\r\n  modalElement.classList.add(\"bs5dialog-modal-prompt\");\r\n  modalElement.innerHTML = `\r\n    <div class=\"modal-dialog modal-${options.size} modal-dialog-centered\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-status bg-${options.type}\"></div>\r\n      <div class=\"modal-body text-center py-4\">\r\n      <div class='modal-icon'></div>\r\n        <h5 class=\"modal-title mb-2\">${options.title}</h5>\r\n        <div class=\"text-muted mb-2\">${content}</div>\r\n        <input class=\"form-control\" type=\"${options.secret ? \"password\" : \"text\"}\" placeholder=\"\">\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <div class=\"w-100\">\r\n          <div class=\"row\">\r\n            <div class=\"col\">\r\n              <button type=\"button\" class=\"w-100 btn btn-default btn-cancel text-truncate\" data-bs-dismiss=\"modal\">${i18n.getConfig(\"cancel\")}</button>\r\n            </div>\r\n            <div class=\"col\">\r\n              <button type=\"button\" class=\"w-100 btn btn-default btn-${options.type} btn-ok text-truncate\">${i18n.getConfig(\"ok\")}</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n    `;\r\n\r\n  if (options.type && options.icon == null) {\r\n    options.icon = \"bs5-code\";\r\n    options.iconClass = \"text-\" + options.type;\r\n  }\r\n\r\n  const iconElement = makeIcon(options.icon, options.iconClass, options.iconStyle);\r\n  modalElement.querySelector(\".modal-icon\").appendChild(iconElement);\r\n  document.body.appendChild(modalElement);\r\n\r\n  const modalInstance = new bootstrap.Modal(modalElement);\r\n  modalInstance.show();\r\n\r\n  modalElement.addEventListener(\"hidden.bs.modal\", () => modalElement.remove());\r\n\r\n  return { el: modalElement, content, options };\r\n}\r\n","import { getMaxZIndex, getTextClass, triggerEvent, observeElement, debounce } from \"../utils.js\";\r\nimport { makeIcon } from \"../resource/icons.js\";\r\nimport { initializeBootstrapComponents } from \"../utils/bootstrapInit.js\";\r\n\r\n/**\r\n * Displays a toast message with customizable options.\r\n * @param {string} message - The message to display in the toast.\r\n * @param {Object} options - An object containing customizable options for the toast.\r\n * @param {string} options.title - The title of the toast.\r\n * @param {string} options.subtitle - The subtitle of the toast.\r\n * @param {string} options.position - The position of the toast on the screen.\r\n * @param {string} options.type - The type of toast (success, warning, error, etc.).\r\n * @param {boolean} options.closeBtn - Whether or not to display a close button on the toast.\r\n * @param {string} options.textColor - The text color of the toast.\r\n * @param {string} options.icon - The icon to display on the toast.\r\n * @param {string} options.iconClass - The class to apply to the icon on the toast.\r\n * @param {string} options.iconStyle - The style to apply to the icon on the toast.\r\n * @param {number} options.timeout - The amount of time (in milliseconds) to display the toast.\r\n * @param {function} options.onShow - A function to call when the toast is shown.\r\n * @param {function} options.onShown - A function to call after the toast is shown.\r\n * @param {function} options.onHide - A function to call when the toast is hidden.\r\n * @param {function} options.onHidden - A function to call after the toast is hidden.\r\n */\r\nexport function toast(message, options = {}) {\r\n  const defaultOptions = {\r\n    title: \"Notice\",\r\n    subtitle: \"\",\r\n    position: \"center\",\r\n    type: \"success\",\r\n    closeBtn: false,\r\n    icon: \"\",\r\n    iconClass: \"\",\r\n    iconStyle: \"\",\r\n    timeout: 3000,\r\n    onShow: () => { },\r\n    onShown: () => { },\r\n    onHide: () => { },\r\n    onHidden: () => { }\r\n  };\r\n\r\n  options = { ...defaultOptions, ...options };\r\n\r\n  const toastElement = document.createElement(\"div\");\r\n\r\n  const hideToast = () => {\r\n    options.onHide?.();\r\n    toastElement.classList.add(\"bs5-dialog-msg-hide\");\r\n    debounce(() => {\r\n      toastElement.style.display = \"none\";\r\n      debounce(() => {\r\n        toastElement.remove();\r\n      }, 500);\r\n    }, 300);\r\n  };\r\n\r\n  observeElement(toastElement, {\r\n    created: () => {\r\n      options.onShow?.();\r\n      triggerEvent(toastElement, \"bs5:dialog:toast:created\", { options, el: toastElement });\r\n    },\r\n    rendered: () => {\r\n      options.onShown?.();\r\n      triggerEvent(toastElement, \"bs5:dialog:toast:rendered\", { options, el: toastElement });\r\n      initializeBootstrapComponents(toastElement);\r\n    },\r\n    hidden: () => {\r\n      options.onHidden?.();\r\n      triggerEvent(toastElement, \"bs5:dialog:toast:hidden\", { options, el: toastElement });\r\n    },\r\n    remove: () => {\r\n      triggerEvent(toastElement, \"bs5:dialog:toast:remove\", { options, el: toastElement });\r\n    }\r\n  });\r\n\r\n  toastElement.classList.add(\"toast\", \"show\", \"bs5-dialog-msg\", `bs5-dialog-msg-${options.position}`);\r\n  toastElement.setAttribute(\"role\", \"alert\");\r\n  toastElement.style.zIndex = getMaxZIndex() + 1;\r\n\r\n  const toastBodyElement = document.createElement(\"div\");\r\n  toastBodyElement.classList.add(\"toast-body\", \"bg-white\");\r\n  toastBodyElement.innerHTML = message;\r\n\r\n  if (options.title) {\r\n    const toastHeaderElement = document.createElement(\"div\");\r\n    const textColor = getTextClass(`bg-${options.type}`);\r\n    toastHeaderElement.classList.add(\"toast-header\", `bg-${options.type}`, textColor);\r\n\r\n    const closeButtonClass = textColor === \"text-white\" ? \"btn-close-white\" : \"\";\r\n    toastHeaderElement.innerHTML = `\r\n      <strong class=\"me-auto\">${options.title}</strong>\r\n      <small class=\"text-truncate\" style=\"max-width: 50%;\">${options.subtitle}</small>\r\n      <button type=\"button\" class=\"btn-x btn-close ${closeButtonClass}\" data-bs-dismiss=\"toast\" aria-label=\"Close\"></button>\r\n    `;\r\n\r\n    if (options.icon) {\r\n      const iconElement = makeIcon(options.icon, options.iconClass, options.iconStyle);\r\n      iconElement.classList.add(textColor);\r\n      toastHeaderElement.prepend(iconElement);\r\n      toastHeaderElement.classList.add(\"ps-1\");\r\n    }\r\n\r\n    toastElement.appendChild(toastHeaderElement);\r\n  }\r\n\r\n  toastElement.appendChild(toastBodyElement);\r\n  document.body.appendChild(toastElement);\r\n\r\n  if (options.timeout) {\r\n    debounce(hideToast, options.timeout);\r\n  }\r\n\r\n  toastElement.hide = hideToast;\r\n\r\n  const btnX = toastElement.querySelector(\".btn-x\");\r\n  if (btnX) {\r\n    btnX.addEventListener(\"click\", hideToast);\r\n  }\r\n\r\n  return {\r\n    el: toastElement,\r\n    message,\r\n    options\r\n  };\r\n}\r\n","/**\r\n * An object containing default spinner HTML strings.\r\n * @type {Object}\r\n */\r\nexport const BS5_DIALOG_DEFAULT_SPINNERS = {\r\n  border: `<div class=\"spinner-border\" role=\"status\"></div>`,\r\n  grow: `<div class=\"spinner-grow\" role=\"status\"></div>`\r\n};\r\n\r\n/**\r\n * Creates a spinner element based on the given animation name.\r\n * If no animation name is provided or the animation name is not found in BS5_DIALOG_DEFAULT_SPINNERS,\r\n * a default spinner element is created.\r\n * @param {string} spinnerName - The name of the animation to use for the spinner.\r\n * @param {string} spinnerClass - The class to add to the spinner element.\r\n * @param {string} spinnerStyle - The custom styles to add to the spinner element.\r\n * @returns {HTMLElement} - The spinner element.\r\n */\r\nexport function makeSpinner(spinnerName = \"\", spinnerClass = \"\", spinnerStyle = \"\") {\r\n  spinnerName = spinnerName.trim();\r\n  spinnerClass = spinnerClass.trim();\r\n  spinnerStyle = spinnerStyle.trim();\r\n\r\n  const htmlString = BS5_DIALOG_DEFAULT_SPINNERS[spinnerName] || spinnerName;\r\n  const div = document.createElement(\"div\");\r\n  if (!spinnerName) {\r\n    return div;\r\n  }\r\n  div.innerHTML = htmlString.trim();\r\n  // Change this to div.childNodes to support multiple top-level nodes.\r\n  let spinnerElement;\r\n  if (div.firstChild && div.firstChild instanceof Element) {\r\n    spinnerElement = div.firstChild;\r\n  } else {\r\n    spinnerElement = div;\r\n  }\r\n\r\n  // add spinnerClass to the spinner element\r\n  if (spinnerClass.trim()) {\r\n    spinnerElement.classList.add(...spinnerClass.split(\" \"));\r\n  }\r\n\r\n  // add custom styles to the spinner element\r\n  if (spinnerStyle.trim()) {\r\n    const styles = spinnerStyle.split(\";\");\r\n    styles.forEach(style => {\r\n      const [property, value] = style.split(\":\");\r\n      if (property && value) {\r\n        spinnerElement.style[property.trim()] = value.trim();\r\n      }\r\n    });\r\n  }\r\n\r\n  return spinnerElement;\r\n}\r\n","import { getMaxZIndex, getTargetElement, observeElement, triggerEvent } from \"../utils.js\";\r\nimport { makeSpinner } from \"../resource/loading.js\";\r\nimport { initializeBootstrapComponents } from \"../utils/bootstrapInit.js\";\r\n\r\n/**\r\n * Creates a loading element and appends it to the target element.\r\n * @param {HTMLElement|string} element - The target element or selector to append the loading to.\r\n * @param {Object} options - The options for the loading.\r\n * @param {string} options.animation - The animation for the loading.\r\n * @param {string} options.animationClass - The class of animation for the loading.\r\n * @param {string} options.animationStyle - The style of animation for the loading.\r\n * @param {string} options.text - The text of loading.\r\n * @param {string} options.type - The type of loading.\r\n * @param {boolean} options.backdrop - Whether or not to include a backdrop.\r\n * @param {number} options.timeout - The timeout for the loading in milliseconds.\r\n * @returns {Object} An object with the target element and options.\r\n */\r\nexport function loading(element = document.body, options = {}) {\r\n  const defaultOptions = {\r\n    animation: \"border\",\r\n    animationClass: \"\",\r\n    animationStyle: \"\",\r\n    text: \"Please wait...\",\r\n    type: \"warning\",\r\n    backdrop: true,\r\n    timeout: 0\r\n  };\r\n\r\n  options = { ...defaultOptions, ...options };\r\n\r\n  const targetElement = getTargetElement(element);\r\n  if (!targetElement) {\r\n    console.error(\"Target element not found\");\r\n    return;\r\n  }\r\n\r\n  // Remove any existing spinner\r\n  targetElement.querySelector(\".bs5-dialog-loading\")?.remove();\r\n\r\n  // Handle positioning\r\n  const computedStyle = window.getComputedStyle(targetElement);\r\n  const isPositioned = [\"fixed\", \"absolute\"].includes(computedStyle.position);\r\n  const elementToUse = isPositioned && targetElement.firstChild ? targetElement.firstChild : targetElement;\r\n  elementToUse.style.position = \"relative\";\r\n\r\n  const targetRect = elementToUse.getBoundingClientRect();\r\n\r\n  // Create overlay\r\n  const overlay = document.createElement(\"div\");\r\n  Object.assign(overlay.style, {\r\n    position: \"absolute\",\r\n    top: \"0\",\r\n    left: \"0\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    pointerEvents: \"auto\",\r\n    backgroundColor: \"rgba(255, 255, 255, 0.7)\",\r\n    zIndex: String(getMaxZIndex() + 1)\r\n  });\r\n  overlay.classList.add(\"bs5-dialog-loading\");\r\n\r\n  // Set up observers\r\n  observeElement(overlay, {\r\n    created: () => triggerEvent(overlay, \"bs5:dialog:loading:created\", { options, el: overlay }),\r\n    rendered: () => {\r\n      triggerEvent(overlay, \"bs5:dialog:loading:rendered\", { options, el: overlay });\r\n      initializeBootstrapComponents(overlay);\r\n    },\r\n    hidden: () => triggerEvent(overlay, \"bs5:dialog:loading:hidden\", { options, el: overlay }),\r\n    remove: () => triggerEvent(overlay, \"bs5:dialog:loading:remove\", { options, el: overlay })\r\n  });\r\n\r\n  // Handle backdrop option\r\n  if (options.backdrop === false || options.backdrop === \"false\") {\r\n    overlay.style.backgroundColor = \"transparent\";\r\n    overlay.style.pointerEvents = \"none\";\r\n  }\r\n\r\n  // Handle type option\r\n  if (options.type) {\r\n    options.type = options.type.startsWith(\"text-\") ? options.type : `text-${options.type}`;\r\n    options.animationClass = `${options.animationClass} ${options.type}`.trim();\r\n  }\r\n\r\n  // Create and add spinner\r\n  const animation = makeSpinner(options.animation, options.animationClass, options.animationStyle);\r\n  const animationRect = animation.getBoundingClientRect();\r\n  overlay.appendChild(animation);\r\n\r\n  // Add text if specified\r\n  if (options.text) {\r\n    const overlayText = document.createElement(\"div\");\r\n    Object.assign(overlayText.style, {\r\n      position: \"relative\",\r\n      textAlign: \"center\",\r\n      color: \"#333\",\r\n      bottom: `-${animationRect.height}px`\r\n    });\r\n    overlayText.innerText = options.text;\r\n    overlay.appendChild(overlayText);\r\n\r\n    if (targetRect.height <= 40) {\r\n      animation.remove();\r\n    }\r\n  }\r\n\r\n  // Store original cursor and update\r\n  const preCursor = elementToUse.style.cursor;\r\n  elementToUse.appendChild(overlay);\r\n  elementToUse.style.cursor = \"wait\";\r\n\r\n  // Create hide function\r\n  const hideLoading = () => {\r\n    overlay.remove();\r\n    elementToUse.style.cursor = preCursor;\r\n    if (timer) clearTimeout(timer);\r\n  };\r\n\r\n  // Handle timeout\r\n  let timer;\r\n  if (options.timeout > 0) {\r\n    timer = setTimeout(hideLoading, options.timeout);\r\n  }\r\n\r\n  // Add hide method to element\r\n  elementToUse.hide = hideLoading;\r\n\r\n  return {\r\n    el: elementToUse,\r\n    options\r\n  };\r\n}\r\n\r\n/**\r\n * Removes all loading elements from the document.\r\n */\r\nexport function loadingClean() {\r\n  document.querySelectorAll(\".bs5-dialog-loading\").forEach(el => {\r\n    el.parentNode.style.cursor = \"auto\";\r\n    el.remove();\r\n  });\r\n}\r\n\r\nexport const showLoading = loading;\r\nexport const hideLoading = loadingClean;\r\n","import { load } from \"./components/load.js\";\r\nimport { offcanvas } from \"./components/offcanvas.js\";\r\nimport { alert } from \"./components/alert.js\";\r\nimport { confirm } from \"./components/confirm.js\";\r\nimport { prompt } from \"./components/prompt.js\";\r\nimport { message } from \"./components/message.js\";\r\nimport { toast } from \"./components/toast.js\";\r\nimport { setSystemLang } from \"./i18n.js\";\r\n\r\nconst components = { alert, confirm, prompt, message, toast, load, offcanvas };\r\nexport function addDialogClickListeners() {\r\n  const dialogElems = document.querySelectorAll(\"[data-bs5-dialog]\");\r\n  for (const elem of dialogElems) {\r\n    const opts = Object.fromEntries(\r\n      [...elem.attributes]\r\n        .filter(attr => attr.name.startsWith(\"data-bs5-dialog-option-\"))\r\n        .map(attr => [attr.name.replace(\"data-bs5-dialog-option-\", \"\"), attr.value])\r\n    );\r\n    elem.addEventListener(\"click\", () => {\r\n      const content = elem.title || elem.dataset.content || \"\";\r\n      const elemOpts = elem.dataset.bs5DialogOptions ? JSON.parse(elem.dataset.bs5DialogOptions) : {};\r\n      const func = components[elem.dataset.bs5Dialog];\r\n      if (typeof func === \"function\") {\r\n        func(content.trim(), { ...opts, ...elemOpts });\r\n      } else {\r\n        console.log(`Function ${elem.dataset.bs5Dialog} does not exist`);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport function startup() {\r\n  setSystemLang();\r\n  addDialogClickListeners();\r\n}\r\n\r\nexport default startup;\r\n","import \"./bs5dialog.css\";\r\nimport * as utils from \"./utils.js\";\r\nimport * as i18n from \"./i18n.js\";\r\nimport { setSystemLang } from \"./i18n.js\";\r\nimport { load } from \"./components/load.js\";\r\nimport { offcanvas } from \"./components/offcanvas.js\";\r\nimport { alert } from \"./components/alert.js\";\r\nimport { confirm } from \"./components/confirm.js\";\r\nimport { prompt } from \"./components/prompt.js\";\r\nimport { message, msg } from \"./components/message.js\";\r\nimport { toast } from \"./components/toast.js\";\r\nimport { loading, showLoading, loadingClean, hideLoading } from \"./components/loading.js\";\r\nimport { startup } from \"./startup.js\";\r\nimport { checkBootstrapAvailability } from \"./utils/bootstrapInit.js\";\r\n\r\n// Check if Bootstrap is available on initialization\r\nconst isBootstrapAvailable = checkBootstrapAvailability();\r\n\r\nexport {\r\n  alert,\r\n  confirm,\r\n  prompt,\r\n  message,\r\n  msg,\r\n  toast,\r\n  loading,\r\n  showLoading,\r\n  loadingClean,\r\n  hideLoading,\r\n  load,\r\n  offcanvas,\r\n  utils,\r\n  i18n,\r\n  setSystemLang,\r\n  startup,\r\n  checkBootstrapAvailability,\r\n  isBootstrapAvailable\r\n};\r\n\r\nconst bs5dialog = {\r\n  alert,\r\n  confirm,\r\n  prompt,\r\n  message,\r\n  msg,\r\n  toast,\r\n  loading,\r\n  showLoading,\r\n  loadingClean,\r\n  hideLoading,\r\n  load,\r\n  offcanvas,\r\n  utils,\r\n  i18n,\r\n  setSystemLang,\r\n  startup,\r\n  checkBootstrapAvailability,\r\n  isBootstrapAvailable\r\n}\r\n\r\nexport default bs5dialog;\r\n"],"names":["isUrlOrPath","text","test","getTargetElement","element","Element","document","querySelector","makeResizable","el","style","position","resize","overflow","makeDraggable","elmnt","handler","cursor","currentPosX","currentPosY","previousPosX","previousPosY","prevLeft","prevTop","dragMouseDown","e","preventDefault","clientX","clientY","onmouseup","closeDragElement","onmousemove","elementDrag","top","offsetTop","left","offsetLeft","handlerInfo","getBoundingClientRect","elmntRect","offsetHeight","window","innerHeight","offsetWidth","right","innerWidth","onmousedown","getOverlapDimensions","div1","div2","rect1","rect2","overlapLeft","Math","max","overlapTop","overlapWidth","min","overlapHeight","bottom","genDialogId","floor","random","setModalWrapper","modal","createElement","classList","add","setAttribute","replayLock","timeout","targetElement","disabled","timeoutId","setTimeout","cancelReplayLock","remove","clearTimeout","getMaxZIndex","querySelectorAll","map","parseFloat","getComputedStyle","zIndex","filter","isNaN","getTextClass","bgColorClassName","async","makeRequest","url","method","headers","body","options","csrfTokenMeta","content","FormData","JSON","stringify","response","fetch","contentType","get","isSuccess","ok","statusCode","status","contentTypeValue","indexOf","console","log","json","error","message","triggerEvent","eventName","detail","newEvent","CustomEvent","bubbles","cancelable","event","target","dispatchEvent","debounce","func","delay","args","throttle","limit","lastFunc","lastRan","Date","now","observeElement","resizeObserver","hasRendered","hasHidden","x","y","targetElementStyle","resizeElement","waitForInsertionTimeId","size","width","height","created","waitForInsertion","parentNode","rendered","observer","observe","childList","attributes","attributeFilter","subtree","positionObserver","MutationObserver","mutationsList","mutation","type","ResizeObserver","display","opacity","visibility","hidden","removedNodes","forEach","removedNode","disconnect","newPos","dragged","Promise","resolve","finally","utils","bs5LangCurrentLang","bs5LangConfigs","en","confirm","cancel","save","close","prompt","sure","zh","es","pt","ru","ja","de","fr","ko","getCurrentLang","setCurrentLang","lang","replace","getConfig","key","getConfigs","setSystemLang","systemLang","navigator","language","userLanguage","i18n","checkBootstrapAvailability","bootstrap","missingComponents","component","length","join","initializeBootstrapComponents","dropdown","Dropdown","getInstance","tooltip","Tooltip","popover","Popover","collapse","Collapse","toggle","alert","Alert","toast","Toast","carousel","Carousel","offcanvas","Offcanvas","scrollspy","ScrollSpy","tab","Tab","Modal","button","Button","BS5_DIALOG_DEFAULT_ICONS","makeIcon","iconName","iconClass","iconStyle","iconElement","defaultIcon","startsWith","innerHTML","firstChild","trim","split","property","value","setProperty","closeBtn","background","textColor","fontsize","icon","onClosed","messageElement","messageBodyElement","Object","assign","lineHeight","padding","color","fontSize","prepend","role","appendChild","hideMessage","btnX","addEventListener","hide","msg","load","modalElement","title","id","centered","scrollable","maximize","backdrop","focus","keyboard","draggable","resizable","btnOkText","btnCancelText","onShow","onShown","onHidden","isForm","onSubmit","onSubmitSuccess","onSubmitError","onSubmitDone","getElementById","pointerEvents","modalInstance","getOrCreateInstance","cancelBtn","onCancel","form","submitBtn","okBtn","textContent","formData","eventData","formEl","formAction","action","formMethod","submitResult","handleFormSubmit","shiftKey","click","apiUrl","includes","i18n.getConfig","maximizeToggle","iconMinimizeElement","iconMaximizeElement","append","show","modalDialog","this","contains","parentElement","modalContent","direction","scroll","dark","accordion","container","accordionDirection","offcanvasElement","createOffcanvasElement","prevContainerPadding","getPropertyValue","overlapDimensions","paddingSize","setupOffcanvasObserver","setupOffcanvasAttributes","setupOffcanvasContent","onOk","defaultOptions","onConfirm","btnText","required","secret","inputEl","keyCode","handleInputKeyup","handleOkClick","handleCancelClick","subtitle","onHide","toastElement","hideToast","toastBodyElement","toastHeaderElement","closeButtonClass","BS5_DIALOG_DEFAULT_SPINNERS","border","grow","loading","animation","animationClass","animationStyle","computedStyle","elementToUse","targetRect","overlay","flexDirection","justifyContent","alignItems","backgroundColor","String","spinnerName","spinnerClass","spinnerStyle","htmlString","div","spinnerElement","makeSpinner","animationRect","overlayText","textAlign","innerText","preCursor","hideLoading","timer","loadingClean","showLoading","components","startup","dialogElems","elem","opts","fromEntries","attr","name","dataset","elemOpts","bs5DialogOptions","parse","bs5Dialog","addDialogClickListeners","isBootstrapAvailable","bs5dialog"],"mappings":"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"}